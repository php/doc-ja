<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0f1d7fba407bd1385616508a1e42e31fe009bff2 Maintainer: KentarouTakeda Status: ready -->
<!-- Credits: KentarouTakeda -->
<sect1 xml:id="migration84.other-changes">
 <title>その他の変更</title>

 <sect2 xml:id="migration84.other-changes.core">
  <title>PHP コア</title>

  <sect3 xml:id="migration84.other-changes.core.closures">
   <title>クロージャ</title>

   <simpara>
    クロージャの名前が調整され、親関数の名前と
    定義の行番号を含むようになりました。これにより、
    スタックトレース内などでの識別が容易になります。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.fibers">
   <title>ファイバー(Fibers)</title>

   <simpara>
    デストラクタ実行中にファイバーを切り替えられるようになりました。
    以前はガベージコレクションとの競合のためブロックされていました。
   </simpara>

   <simpara>
    デストラクタは別のファイバー内で実行される場合があります。
   </simpara>

   <simpara>
    ガベージコレクションがファイバー内でトリガーされると、
    GC によって呼び出されるデストラクタは
    別のファイバー(gc_destructor_fiber)内で実行されます。
    このファイバーが中断された場合、残りのデストラクタを実行するために
    新しいファイバーが作成されます。
    以前の gc_destructor_fiber は GC によって参照されなくなり、
    他に参照されていなければ回収される可能性があります。
    デストラクタが中断されたオブジェクトは、
    デストラクタが戻るか <classname>Fiber</classname> が回収されるまで回収されません。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.output">
   <title>出力ハンドラ</title>

   <simpara>
    <function>ob_start</function> の <parameter>flags</parameter> パラメータに渡された
    出力ハンドラのステータスフラグがクリアされるようになりました。
   </simpara>

   <simpara>
    <function>output_add_rewrite_var</function> は、
    リライトされるホストを選択するために
    <link linkend="ini.url-rewriter.hosts"><literal>url_rewriter.hosts</literal></link> を使用するようになりました。
    以前は
    <link linkend="ini.session.trans-sid-hosts"><literal>session.trans_sid_hosts</literal></link>
    を使用していました。
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.sapi">
  <title>SAPI モジュールへの変更</title>

  <sect3 xml:id="migration84.other-changes.sapi.apache">
   <title>apache2handler</title>

   <simpara>
    EOLを迎えた Apache 2.0 および 2.2 のサポートが削除されました。
    最小必要 Apache バージョンは 2.4 になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.cli">
   <title>CLI</title>

   <simpara>
    組み込みサーバーは、指定されたファイルが見つからない場合、
    親ディレクトリをたどってインデックスファイルを再帰的に探します。
    このプロセスは、パスがファイルを指しているように見える場合
    （最後のパスコンポーネントにピリオドが含まれる場合）はスキップされていました。
    その場合、404 エラーが返されていました。
    この動作は、すべての場合にインデックスファイルを探すように変更されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.fpm">
   <title>FPM</title>

   <simpara>
    本文なしでヘッダをフラッシュできるようになりました。
    <!-- See GH-12785. -->
   </simpara>

   <simpara>
    ステータスページにメモリの最大使用量を表示するフィールドが追加されました。
   </simpara>

   <simpara>
    <!-- TODO Does this need a link? -->
    Solaris/Illumos 用の <filename>/dev/poll</filename> <literal>events.mechanism</literal>
    設定は廃止されました。
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.functions">
  <title>変更された関数</title>

  <sect3 xml:id="migration84.other-changes.functions.core">
   <title>PHP コア</title>

   <simpara>
    <function>trigger_error</function> および <function>user_error</function>
    は、戻り値の型が <type>bool</type> ではなく <type>true</type> になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.dom">
   <title>DOM</title>

   <simpara>
    <methodname>DOMDocument::registerNodeClass</methodname>
    は、戻り値の型が <type>bool</type> ではなく <type>true</type> になりました。
    実際には常に &true; を返すことしかできませんでした。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.hash">
   <title>Hash</title>

   <simpara>
    <function>hash_update</function>
    は、戻り値の型が <type>bool</type> ではなく <type>true</type> になりました。
    実際には常に &true; を返すことしかできませんでした。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.intl">
   <title>Intl</title>

   <simpara>
    <constant>NumberFormatter::ROUND_TOWARD_ZERO</constant> および
    <constant>NumberFormatter::ROUND_AWAY_FROM_ZERO</constant>
    が、新しい <constant>PHP_ROUND_<replaceable>*</replaceable></constant>
    モードと一致するように、
    <constant>NumberFormatter::ROUND_DOWN</constant> および
    <constant>NumberFormatter::ROUND_UP</constant>
    のエイリアスとして追加されました。
   </simpara>

   <simpara>
    <methodname>ResourceBundle::get</methodname>
    <!-- TODO Use a proper union type for the return type -->
    は、戻り値の型が <literal>ResourceBundle|array|string|int|null</literal> になりました。
   </simpara>

   <simpara>
    <function>idn_to_ascii</function> および <function>idn_to_utf8</function>
    関数は、<parameter>domain</parameter> 名が空または長すぎる場合、
    <exceptionname>ValueError</exceptionname> をスローするようになりました。
   </simpara>

   <simpara>
    <function>idn_to_ascii</function> および <function>idn_to_utf8</function>
    関数は、<parameter>variant</parameter> パラメータが
    <constant>INTL_IDNA_VARIANT_UTS46</constant> でない場合、
    <exceptionname>ValueError</exceptionname> をスローするようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.libxml">
   <title>LibXML</title>

   <simpara>
    <function>libxml_set_streams_context</function> は、
    非ストリームコンテキストリソースが関数に渡された場合、
    ストリームコンテキストが使用されるときではなく、
    直ちに <exceptionname>TypeError</exceptionname> をスローするようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.mbstring">
   <title>MBString</title>

   <simpara>
    <function>mb_strcut</function> の動作は、
    無効な UTF-8 および UTF-16 文字列に対してより一貫性のあるものになりました。
    有効な UTF-8 および UTF-16 文字列に対する動作の変更はありません。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.odbc">
   <title>ODBC</title>

   <simpara>
    <function>odbc_fetch_object</function>、
    <function>odbc_fetch_array</function>、および
    <function>odbc_fetch_into</function> の
    <parameter>row</parameter> は、デフォルト値が &null; になり、
    <function>odbc_fetch_row</function> と一致するようになりました。
    以前は、それぞれデフォルト値が
    <literal>-1</literal>、
    <literal>-1</literal>、
    <literal>0</literal>
    でした。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.openssl">
   <title>OpenSSL</title>

   <simpara>
    <function>openssl_csr_new</function> の
    <parameter>extra_attributes</parameter> は、
    <acronym>CSR</acronym> 属性を設定します。
    以前はサブジェクト DN が誤って設定されていました。
   </simpara>

   <simpara>
    <function>openssl_csr_new</function> の
    <parameter>dn</parameter> は、
    単一のエントリに対して値の <type>array</type> を設定できるようになりました。
   </simpara>

   <simpara>
    <function>openssl_csr_sign</function> に新たに
    <parameter>serial_hex</parameter> が追加され、
    16 進形式でシリアル番号を設定できるようになりました。
   </simpara>

   <simpara>
    <function>openssl_x509_parse</function> で ASN.1 UTCTime を解析する際、
    OpenSSL バージョン 3.2 未満では秒が省略されていると失敗します
    (そのようなフィールドでは <literal>-1</literal> が返されます)。
    OpenSSL バージョン 3.3 以降では、そのような証明書は読み込むことができません。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo">
   <title>PDO</title>

   <simpara>
    <methodname>PDO::getAttribute</methodname> で
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    属性の値を取得できるようになりました。
   </simpara>

   <simpara>
    <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant> が追加されました。
    サポートされているドライバで <methodname>PDO::getAttribute</methodname> を使用して
    クエリ結果のメモリ使用量を取得できるようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-firebird">
   <title>PDO_FIREBIRD</title>

   <simpara>
    <!-- TODO Only for the specific driver class? -->
    <methodname>PDO::getAttribute</methodname> で
    <!-- TODO Is this a class constant of the driver class? -->
    <constant>FB_ATTR_DATE_FORMAT</constant>、
    <constant>FB_ATTR_TIME_FORMAT</constant>、
    <constant>FB_ATTR_TIMESTAMP_FORMAT</constant> 属性の値を取得できるようになりました。
   </simpara>

   <para>
    トランザクションの分離レベルとアクセスモードを指定するための新しい属性が追加されました。
    この機能のため 5 つの定数が追加されました:

    <simplelist>
     <member><constant>Pdo\Firebird::TRANSACTION_ISOLATION_LEVEL</constant></member>
     <member><constant>Pdo\Firebird::READ_COMMITTED</constant></member>
     <member><constant>Pdo\Firebird::REPEATABLE_READ</constant></member>
     <member><constant>Pdo\Firebird::SERIALIZABLE</constant></member>
     <member><constant>Pdo\Firebird::WRITABLE_TRANSACTION</constant></member>
    </simplelist>
   </para>

   <simpara>
    永続的な接続を使用する場合、コンストラクタ内での生存チェックが追加されました。
   </simpara>

   <simpara>
    ビルドされる内容は、
    <filename class="headerfile">ibase.h</filename> 内の
    <constant>FB_API_VER</constant> の値によって変わります。
    この情報を取得するために新しい静的メソッド <methodname>Pdo\Firebird::getApiVersion</methodname>
    が追加されました。
    この情報は <function>phpinfo</function> からも参照できます。
   </simpara>

   <para>
    5 つの新しいデータ型が利用可能になりました:
    <simplelist type="inline">
     <member><literal>INT128</literal></member>
     <member><literal>DEC16</literal></member>
     <member><literal>DEC34</literal></member>
     <member><literal>TIMESTAMP_TZ</literal></member>
     <member><literal>TIME_TZ</literal></member>
    </simplelist>

    これらは Firebird 4.0 以降で利用可能です。
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-mysql">
   <title>PDO_MYSQL</title>

   <simpara>
    <!-- TODO Only for the specific driver class? -->
    <methodname>PDO::getAttribute</methodname> で
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant> 属性の
    値を取得できるようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-pgsql">
   <title>PDO_PGSQL</title>

   <simpara>
    <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant>
    によるクエリのメモリ使用量の取得をサポートしました。
   </simpara>

   <simpara>
    カラムが <literal>FLOAT4OID</literal> または
    <literal>FLOAT8OID</literal> 型の場合、値は
    <type>string</type> ではなく <type>float</type> として返されるようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pgsql">
   <title>PGSQL</title>

   <simpara>
    <function>pg_select</function> の <parameter>conditions</parameter> パラメータ
    はオプションになり、空の配列を受け入れるようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.phar">
   <title>Phar</title>

   <para>
    <simplelist type="inline">
     <member><methodname>Phar::setAlias</methodname></member>
     <member><methodname>Phar::setDefaultStub</methodname></member>
    </simplelist>
    は、戻り値の型が <type>bool</type> ではなく
    <type>true</type> になりました。
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.posix">
   <title>POSIX</title>

   <simpara>
    <function>posix_isatty</function> は、
    ファイル記述子/ストリーム引数が無効な場合エラー番号を設定するようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.reflection">
   <title>Reflection</title>

   <simpara>
    <methodname>ReflectionGenerator::getFunction</methodname>
    は、ジェネレータの実行が終了した後でも呼び出すことができるようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sockets">
   <title>Sockets</title>

   <simpara>
    <function>socket_create_listen</function> の
    <parameter>backlog</parameter> パラメータのデフォルト値は
    <constant>SOMAXCONN</constant> になりました。
    以前は <literal>128</literal> でした。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sodium">
   <title>Sodium</title>

   <simpara>
    <function>sodium_crypto_aead_aes256gcm_<replaceable>*</replaceable></function>
    関数は、ARM 暗号化拡張を持つ aarch64 CPU で
    利用可能になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.spl">
   <title>SPL</title>

   <para>
    <simplelist type="inline">
     <member><methodname>SplPriorityQueue::insert</methodname></member>
     <member><methodname>SplPriorityQueue::recoverFromCorruption</methodname></member>
     <member><methodname>SplHeap::insert</methodname></member>
     <member><methodname>SplHeap::recoverFromCorruption</methodname></member>
    </simplelist>
    メソッドは、戻り値の型が <type>bool</type> ではなく
    <type>true</type> になりました。
   </para>

   <simpara>
    <classname>SplObjectStorage</classname> は
    <interfacename>SeekableIterator</interfacename> を実装するようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.standard">
   <title>Standard</title>

   <simpara>

    <constant>PASSWORD_BCRYPT</constant> ハッシュアルゴリズムの
    <function>password_hash</function> のデフォルトの <literal>'cost'</literal> 値が
    <literal>10</literal> から <literal>12</literal> に引き上げられました。
    <!-- RFC: https://wiki.php.net/rfc/bcrypt_cost_2023 -->
   </simpara>

   <simpara>
    <function>debug_zval_dump</function> は、配列がパックされているかどうかを示すようになりました。
   </simpara>

   <simpara>
    <!-- TODO Proper union type -->
    <function>long2ip</function> は、戻り値の型が <literal>string|false</literal> ではなく
    <type>string</type> になりました。
   </simpara>

   <simpara>
    <function>highlight_string</function> は、戻り値の型が
    <!-- TODO Proper union type -->
    <literal>string|bool</literal> ではなく<type>string|true</type> になりました。
   </simpara>

   <simpara>
    <function>print_r</function> は、戻り値の型が
    <!-- TODO Proper union type -->
    <literal>string|bool</literal> ではなく <type>string|true</type> になりました。
   </simpara>

   <!-- TODO: Someone else take care of this - Girgias -->
   <sect4>
    <title><function>round</function> による丸め処理</title>

    <simpara>
     <function>round</function> 関数の
     <parameter>mode</parameter> パラメータは、
     <!-- TODO Proper union type -->
     <literal>RoundingMode|int</literal> に拡張され、
     <!-- TODO should be <enumname> ? -->
     新たに追加された <classname>RoundingMode</classname> 列挙型のインスタンスを受け入れます。
     <!-- RFC: https://wiki.php.net/rfc/correctly_name_the_rounding_mode_and_make_it_an_enum -->
    </simpara>

    <para>
     <function>round</function> 関数に 4 つの新しいモードが追加されました:
     <simplelist type="inline">
      <member><!-- <enumidentifier> -->RoundingMode::PositiveInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::NegativeInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::TowardsZero<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::AwayFromZero<!-- </enumidentifier> --></member>
     </simplelist>
     <!-- RFC: https://wiki.php.net/rfc/new_rounding_modes_to_round_function -->
    </para>

    <simpara>
     整数への丸めのための内部実装が、正確さの検証と
     メンテナンスの容易さのために書き直されました。
     その結果、いくつかの丸め処理のバグが修正されました。
     例えば、以前は <literal>0.49999999999999994</literal>を最も近い整数に丸めると、
     正しい結果の <literal>0.0</literal> ではなく
     <literal>1.0</literal> になっていました。
     他の入力も影響を受け、以前の PHP バージョンと比較して
     異なる出力になる場合があります。
    </simpara>

    <simpara>
     <function>round</function> 関数の「事前丸め」によるバグが修正されました。
     以前は、「事前丸め」により <literal>0.285</literal>
     (実際には <literal>0.28499999999999998</literal>)のような値を
     10 進数として、<literal>0.29</literal> に丸めていました。
     しかし、「事前丸め」は特定の数値を誤って丸めるため、
     この修正では「事前丸め」を削除し、値同士の比較方法を変更することで、
     値が 10 進数として正しく丸められるようにしました。
    </simpara>

    <simpara>
     <function>round</function> が処理できる最大精度が
     1桁増えました。
     例えば、<code>round(4503599627370495.5)</code> は以前は
     <literal>4503599627370495.5</literal> を返していましたが、
     現在は <literal>4503599627370496</literal> を返します。
    </simpara>

   </sect4>
  </sect3>

 </sect2>

 <sect2 xml:id="migration84.other-changes.extensions">
  <title>拡張モジュールへのその他の変更</title>

  <sect3 xml:id="migration84.other-changes.extensions.curl">
   <title>cURL</title>

   <simpara>
    最小必要 libcurl バージョンは 7.61.0 になりました。
   </simpara>

   <simpara>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant> オプションは
    もはや効果がなく、通知なく無視されます。
    この基本機能は libcurl 7.11.1 で非推奨となり、
    libcurl 7.62.0 で削除されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.gmp">
   <title>GMP</title>

   <!-- RFC: https://wiki.php.net/rfc/fix_up_bcmath_number_class -->
   <simpara>
    <classname>GMP</classname> オブジェクトを <type>bool</type> に
    キャストできるようになりました。以前は <constant>E_RECOVERABLE_ERROR</constant> が発生していました。
    キャストの動作はオーバーロードされ、値が <literal>0</literal> を表す
    <classname>GMP</classname> オブジェクトは &false; にキャストされます。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.libxml">
   <title>LibXML</title>

   <simpara>
    最小必要 libxml2 バージョンは 2.9.4 になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.intl">
   <title>Intl</title>

   <simpara>
    Intl クラスの動作が統一され、
    初期化されていないオブジェクトを使用しようとした場合やクローンに失敗した場合に、
    <exceptionname>Error</exceptionname> 例外をスローするようになりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mbstring">
   <title>MBString</title>

   <simpara>
    Unicode データテーブルが Unicode 16.0 に更新されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mysqlnd">
   <title>MySQLnd</title>

   <simpara>
    MySQL 9 の新しい VECTOR データ型のサポート。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.openssl">
   <title>OpenSSL</title>

   <simpara>
    最小必要 OpenSSL バージョンは 1.1.1 になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pdo-pgsql">
   <title>PDO_PGSQL</title>

   <simpara>
    最小必要 libpq バージョンは 10.0 になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pgsql">
   <title>PGSQL</title>

   <simpara>
    最小必要 libpq バージョンは 10.0 になりました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.spl">
   <title>SPL</title>

   <simpara>
    <classname>SplFixedArray</classname> での範囲外アクセスは、
    <exceptionname>RuntimeException</exceptionname> ではなく
    <exceptionname>OutOfBoundsException</exceptionname> 型の例外をスローするようになりました。
    <exceptionname>OutOfBoundsException</exceptionname> は
    <exceptionname>RuntimeException</exceptionname> の子クラスであるため、
    これらの例外をキャッチしようとする際の動作に変更はありません。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.xsl">
   <title>XSL</title>

   <simpara>
    型付きプロパティ <property>XSLTProcessor::$cloneDocument</property>
    および <property>XSLTProcessor::$doXInclude</property> が定義されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.zlib">
   <title>Zlib</title>

   <simpara>
    最小必要 zlib バージョンは 1.2.11 になりました。
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.performance">
  <title>パフォーマンス</title>

  <sect3 xml:id="migration84.other-changes.performance.core">
   <title>PHP コア</title>

   <simpara>
    ZTS ビルドにおける高負荷の並行処理環境下で、
    浮動小数点数の解析とフォーマットのパフォーマンスが向上しました。
    これは <function>printf</function> 系の関数や
    <function>json_encode</function>、<function>serialize</function>
    などのシリアライズ関数に影響します。
   </simpara>

   <simpara>
    <literal>%s</literal> と <literal>%d</literal> 指定子のみを使用する
    <function>sprintf</function> は、同等の文字列補間にコンパイルされ、
    関数呼び出しのオーバーヘッドとフォーマット文字列の
    繰り返し解析を回避します。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.bcmath">
   <title>BCMath</title>

   <simpara>
    数値の変換と演算のパフォーマンスが向上しました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.dom">
   <title>DOM</title>

   <simpara>
    <methodname>DOMNode::C14N</methodname> のパフォーマンスが、
    xpath クエリなしの場合に大幅に向上しました。
    これは数万ノードのドキュメントで簡単に 2 桁の
    時間改善をもたらします。
   </simpara>

   <simpara>
    XML シリアライズのパフォーマンスが向上し、メモリ消費が削減されました。
   </simpara>

   <simpara>
    ノードクラスのメモリ使用量が削減されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.ftp">
   <title>FTP</title>

   <simpara>
    大きなアップロードで FTP アップロードのパフォーマンスが
    最大 10 倍向上しました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.hash">
   <title>Hash</title>

   <simpara>
    SHA-256 の SSE2 および SHA-NI 実装が追加されました。
    これにより、サポートされている CPU でのパフォーマンスが SSE2 で最大 1.3 倍、
    SHA-NIで 3から 5 倍向上します。
    この最適化は Colin Percival / Tarsnap の功績です。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mbstring">
   <title>MBString</title>

   <simpara>
    <function>mb_strcut</function> は UTF-8 および
    UTF-16 文字列で大幅に高速になりました。
   </simpara>

   <simpara>
    mbstring のエンコーディング名の検索が大幅に高速になりました。
   </simpara>

   <simpara>
    SJIS-win から Unicode への変換のパフォーマンスが大幅に向上しました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mysqlnd">
   <title>MySQLnd</title>

   <simpara>
    MySQLnd のクオートのパフォーマンスが向上しました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.pcre">
   <title>PCRE</title>

   <simpara>
    名前付きキャプチャグループのパフォーマンスが向上しました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.random">
   <title>Random</title>

   <simpara>
    <classname>Random\Randomizer</classname> のパフォーマンスが向上しました。
    特に <methodname>Random\Randomizer::getBytes</methodname> と
    <methodname>Random\Randomizer::getBytesFromString</methodname> メソッドで顕著です。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.simplexml">
   <title>SimpleXML</title>

   <simpara>
    XML シリアライズのパフォーマンスが向上し、メモリ消費が削減されました。
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.standard">
   <title>Standard</title>

   <simpara>
    <function>strspn</function> および <function>strcspn</function> の
    パフォーマンスが大幅に向上しました。
    二乗時間ではなく、線形時間で実行されるようになりました。
   </simpara>

   <simpara>
    <function>strpbrk</function> のパフォーマンスが向上しました。
   </simpara>

   <simpara>
    <function>get_browser</function> は大幅に高速になり、
    いくつかのテストケースで最大 1.5 倍から 2.5 倍の速度向上を実現しました。
   </simpara>
  </sect3>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
