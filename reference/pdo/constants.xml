<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2097828a3d29d8e6eb96519f371ad4c147bc6d7a Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,shimooka,mumumu -->
<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     ブールデータ型を表します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL NULL データ型を表します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL INTEGER データ型を表します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL CHAR, VARCHAR, または他の文字列データ型を表します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     事前定義された文字セットを使用する文字列であることを示すフラグです。
    </simpara>
    <simpara> 
     PHP 7.2.0 以降で利用可能です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     通常の文字セットを使用する文字列であることを示すフラグです。
    </simpara>
    <simpara> 
     PHP 7.2.0 以降で利用可能です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     SQL ラージオブジェクト型を表します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     レコードセット型を表します。この型は現在どのドライバでもサポートされていません。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     パラメータがストアドプロシージャ用の入力パラメータであることを指定します。
     この値は、PDO::PARAM_* データ型とのビットORとして指定する必要があります。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-default">
   <term>
    <constant>PDO::FETCH_DEFAULT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     デフォルトの取得方法を使うことを指定します。
     PHP 8.0.7 以降で利用可能です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     取得する方法として、
     結果セットが返すカラム名と同じ名前の変数を有するオブジェクトとして各行を返す方法を
     指定します。
     <constant>PDO::FETCH_LAZY</constant> は、アクセスされたものと同じ名前のオブジェクト変数を作成します。
     <function>PDOStatement::fetchAll</function> の中では使えません。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの対応するカラム名にふられているものと同じキーを付けた
     連想配列として各行を返す取得方法を指定します。
     もし結果セットが複数のカラムを同名で含む場合、
     <constant>PDO::FETCH_ASSOC</constant> はカラム名毎に 1 つの値のみ返します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの対応するカラム名にふられているものと同じキーを付けた
     連想配列として各行を返す取得方法を指定します。
     もし結果セットが複数のカラムを同名で含む場合、
     <constant>PDO::FETCH_NAMED</constant> はカラム名毎に値の配列を返します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの対応するカラム番号にふられているものと同じ添字を付けた
     配列として各行を返す取得方法を指定します。番号は0から始まります。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットと同じカラム名と0から始まるカラム番号を付けた配列として各行を返す
     方法を指定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットが返すカラム名と同じ名前のプロパティを有する
     オブジェクトとして各行を返す方法を指定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットのカラムの値を
     <function>PDOStatement::bindParam</function> または
     <function>PDOStatement::bindColumn</function> メソッドでバインドされた
     PHP変数に代入し、TRUEを返すという取得方法を指定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの次の行から指定された一つのカラムのみを返す取得方法を指定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     カラムをクラスのプロパティにマップしつつ、
     指定されたクラスの新規インスタンスを返す取得方法を指定します。
    </simpara>
    <note>
     <simpara>
      要求されたクラスにプロパティが存在しない場合は、マジックメソッド
      <link linkend="language.oop5.overloading.members"><methodname>__set</methodname></link>
      がコールされます。
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     カラムをクラスのプロパティにマップしつつ、
     指定されたクラスの既存のインスタンスを更新する取得方法を指定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     データをその場で扱う方法を完全にカスタマイズできるようにします
     (<function>PDOStatement::fetchAll</function> の中でしか使えません)。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     値で返すグループ。
     <constant>PDO::FETCH_COLUMN</constant> あるいは
     <constant>PDO::FETCH_KEY_PAIR</constant> と組み合わせます。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     一意な値だけを取得します。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      ふたつのカラムからなる結果を配列で取得します。最初のカラムの値がキー、二番目のカラムの内容が値となります。
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     最初のカラムの値からクラス名を決定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_INTO</constant> と同様ですが、
     シリアライズした文字列としてオブジェクトを提供します。
     このフラグを設定した場合はコンストラクタが呼ばれません。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     コンストラクタを呼んでからプロパティを設定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO::ATTR_AUTOCOMMIT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     この値が &false; の場合、PDO は接続がトランザクションを開始できるように
     オートコミットを無効にしようとします。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     独自アプリケーションにおけるメモリ使用量に対する速度のバランスを
     調整するためのプリフェッチサイズを設定します。
     全てのデータベースとドライバの組み合わせでプリフェッチサイズの設定を
     サポートしているわけではありません。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     データベースとの通信に対するタイムアウト値を秒で設定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     <literal>PDO::CASE_*</literal> 定数で指定されたケースにカラム名を変更します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     ドライバ名を返します。
    </simpara>
    <para>
     <example><title><constant>PDO::ATTR_DRIVER_NAME</constant> の使用例</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
  echo "mysql 上で動作しています。何か mysql 固有のことをここで行います\n";
}
?>
]]>
     </programlisting>
     </example>
     </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     空文字を SQL の NULL 値に変換します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
     (<type>mixed</type>)
   </term>
   <listitem>
    <simpara>
     新規接続を生成するよりもむしろ持続的接続を要求します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara> 
     Sets the class name of which statements are returned as.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セット中の各カラム名にカタログ名を追加します。
     カタログ名とカラム名は、小数点 (.) で区切られます。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セット中の各カラム名にテーブル名を追加します。
     テーブル名とカラム名は、小数点 (.) で区切られます。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara> 
     全てのフェッチする値を強制的に文字列として扱います。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara> 
     カラム名の最大の長さを設定します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara> 

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     デフォルトの文字列のパラメータタイプを設定します。
     <constant>PDO::PARAM_STR_NATL</constant> 
     と <constant>PDO::PARAM_STR_CHAR</constant> のうち、いずれかひとつを選べます。
    </simpara>
    <simpara>
     PHP 7.2.0 以降で利用可能です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     エラー時にエラーもしくは例外を発生しません。
     開発者の方は明示的にエラーをチェックするようにしてください。
     これはデフォルトのモードです。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     エラーが発生した場合、PHP の <constant>E_WARNING</constant> メッセージを発行します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     エラーが発生した場合、PDOException を投げます。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     カラム名をデータベースドライバにより返されたままにします。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     カラム名を小文字にします。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     カラム名を大文字にします。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの次の行を取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの前の行を取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの先頭の行を取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットの最後の行を取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットから行番号で指定した行を取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットのカーソルの現在の位置を基準とする相対位置により指定された行を
     取得します。スクローラブルなカーソルでのみ有効です。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     前進のみ可能なカーソルを有する <classname>PDOStatement</classname> オブジェクトを生成します。
     これにより、アプリケーションの性能は改善しますが、
     PDOStatementオブジェクトは前方にある結果セットから一度に一行を
     取得するという制約を受けます。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     スクローラブルカーソルを有する <classname>PDOStatement</classname> オブジェクトを作成します。
     結果セットから取得した行を制御するための <literal>PDO::FETCH_ORI_*</literal> 定数を指定して
     ください。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_CANT_MAP</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_SYNTAX</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_CONSTRAINT</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_NOT_FOUND</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_ALREADY_EXISTS</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_NOT_IMPLEMENTED</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_MISMATCH</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_TRUNCATED</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_DISCONNECTED</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_NO_PERM</constant>
     (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
     (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     SQLSTATE '00000' は SQL
     ステートメントがエラーや警告がなく発行に成功したことを意味します。
     この定数はエラーが発生したかどうかを判別するために
     <function>PDO::errorCode</function> もしくは
     <function>PDOStatement::errorCode</function> をチェックする際に
     便利です。この場合、通常はエラー状態を発生したメソッドからの戻りコードを
     検査することによって検知します。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     割り当てられたときに発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     割り当てが解除されたときに発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     プリペアドステートメントの実行前に発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     プリペアドステートメントの実行後に発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットから結果を取得する前に発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     結果セットから結果を取得した後に発生するイベント。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     バインドパラメータの登録時に発生するイベント。
     これにより、ドライバがパラメータ名を正規化できるようになります。
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.sqlite_deterministic">
   <term>
    <constant>PDO::SQLITE_DETERMINISTIC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      <function>PDO::sqliteCreateFunction</function> で作られる関数が決定論的であることを指定します。
      つまり、同じ入力が与えられると、単一のSQLステートメントの範疇では同じ結果が常に返されます。
      (PHP 7.1.4 以降で使用可能です)
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
