<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 51fc0eaf8ecc894bb567fb7de2de789bec74e257 Maintainer: takagi Status: ready -->
<reference xml:id="class.reflectionmethod" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>ReflectionMethod クラス</title>
 <titleabbrev>ReflectionMethod</titleabbrev>

 <partintro>

<!-- {{{ ReflectionMethod intro -->
  <section xml:id="reflectionmethod.intro">
   &reftitle.intro;
   <para>
    <classname>ReflectionMethod</classname> クラスは
    メソッドについての情報を報告します。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="reflectionmethod.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <classname>ReflectionMethod</classname>
    </ooclass>

    <ooclass>
     <modifier>extends</modifier>
     <classname>ReflectionFunctionAbstract</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-static">ReflectionMethod::IS_STATIC</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-public">ReflectionMethod::IS_PUBLIC</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-protected">ReflectionMethod::IS_PROTECTED</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-private">ReflectionMethod::IS_PRIVATE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-abstract">ReflectionMethod::IS_ABSTRACT</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="reflectionmethod.constants.is-final">ReflectionMethod::IS_FINAL</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>string</type>
     <varname linkend="reflectionmethod.props.class">class</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionfunctionabstract')/db:partintro/db:section/db:classsynopsis/db:fieldsynopsis[preceding-sibling::db:classsynopsisinfo[1][@role='comment' and text()='&Properties;']]))">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionmethod')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='ReflectionMethod'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionmethod')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ReflectionMethod'])">
     <xi:fallback/>
    </xi:include>

    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.reflectionfunctionabstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ReflectionFunctionAbstract'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  
<!-- {{{ ReflectionMethod properties -->
  <section xml:id="reflectionmethod.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="reflectionmethod.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>メソッド名</para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="reflectionmethod.props.class">
     <term><varname>class</varname></term>
     <listitem>
      <para>クラス名</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->


<!-- {{{ ReflectionMethod constants -->
  <section xml:id="reflectionmethod.constants">
   &reftitle.constants;
   <section xml:id="reflectionmethod.constants.modifiers">
    <title>ReflectionMethod の修飾子</title>
    <variablelist>

     <varlistentry xml:id="reflectionmethod.constants.is-static">
      <term>
       <constant>ReflectionMethod::IS_STATIC</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが static であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>1</literal> でした。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-public">
      <term>
       <constant>ReflectionMethod::IS_PUBLIC</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが public であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>256</literal> でした。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-protected">
      <term>
       <constant>ReflectionMethod::IS_PROTECTED</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが protected であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>512</literal> でした。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-private">
      <term>
       <constant>ReflectionMethod::IS_PRIVATE</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが private であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>1024</literal> でした。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-abstract">
      <term>
       <constant>ReflectionMethod::IS_ABSTRACT</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが abstract であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>2</literal> でした。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="reflectionmethod.constants.is-final">
      <term>
       <constant>ReflectionMethod::IS_FINAL</constant>
       <type>int</type>
      </term>
      <listitem>
       <para>
        メソッドが final であることを示します。
        PHP 7.4.0 より前のバージョンでは、この値は <literal>4</literal> でした。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
    <note>
     <para>
      これらの定数の値は、PHP のバージョンが異なると変更される可能性があります。
      これらの値を直接用いず、常に定数を使うことを推奨します。
     </para>
    </note>
   </section>
  </section>
<!-- }}} -->

  <section role="changelog">
   &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>
        クラス定数が型付けされました。
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <methodname>ReflectionMethod::export</methodname> は、削除されました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </section>
 </partintro>

 &reference.reflection.entities.reflectionmethod;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
