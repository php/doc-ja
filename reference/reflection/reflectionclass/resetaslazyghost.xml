<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c0fa5077c8862405942d8aac7360c5169558b59b Maintainer: KentarouTakeda Status: ready -->
<!-- Credits: KentarouTakeda -->
<refentry xml:id="reflectionclass.resetaslazyghost" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::resetAsLazyGhost</refname>
  <refpurpose>オブジェクトをリセットしてレイジーとしてマークする</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionClass">
   <modifier>public</modifier> <type>void</type><methodname>ReflectionClass::resetAsLazyGhost</methodname>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
   <methodparam><type>callable</type><parameter>initializer</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   既存の<parameter>object</parameter>をリセットし、レイジーとしてマークします。
  </simpara>
  <simpara>
   オブジェクトのデストラクタが存在する場合、
   <constant>ReflectionClass::SKIP_DESTRUCTOR</constant>フラグが指定されていない限り、
   デストラクタが呼び出されます。特殊なケースとして、オブジェクトが初期済のプロキシの場合、
   実インスタンスはプロキシから切り離されます。実インスタンスが他で参照されていない場合、
   <constant>SKIP_DESTRUCTOR</constant>フラグに関係なく、
   そのデストラクタが呼び出されます。
  </simpara>
  <simpara>
   動的プロパティは削除され、クラスで宣言されたプロパティの値は
   <function>unset</function> と同等の方法で破棄され、
   レイジーとしてマークされます。これは、オブジェクトが追加のプロパティを持つ
   サブクラスのインスタンスである場合、これらのプロパティは変更されず、
   レイジーにもならないことを意味します。
   <link linkend="language.oop5.properties.readonly-properties">読み取り専用プロパティ</link>も、
   <literal>final</literal>であるかクラス自体が<literal>final</literal>である場合、
   変更されず、レイジーにもなりません。
  </simpara>
  <simpara>
   レイジーとしてマークされたプロパティがない場合、オブジェクトはレイジーとしてマークされません。
   <link linkend="language.oop5.lazy-objects.lifecycle">レイジーオブジェクトのライフサイクル</link>
   も参照してください。
  </simpara>
  <simpara>
   それ以外の場合、このメソッドを呼び出した後、
   オブジェクトの動作は
   <methodname>ReflectionClass::newLazyGhost</methodname>によって作成されたオブジェクトと同じになります
   （上記で説明したサブクラスと読み取り専用プロパティを除く）。
  </simpara>
  <simpara>
   オブジェクトは他のものに置き換えられず、その同一性は変わりません。
   <function>spl_object_id</function>、
   <function>spl_object_hash</function>、
   <classname>SplObjectStorage</classname>、
   <classname>WeakMap</classname>、
   <classname>WeakReference</classname>、または
   <link linkend="language.oop5.object-comparison">一致演算子
   (<literal>===</literal>)</link>などの機能は影響を受けません。
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>object</parameter></term>
    <listitem>
     <simpara>
      非レイジーなオブジェクト、または初期化されたレイジーオブジェクト。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>initializer</parameter></term>
    <listitem>
     <simpara>
      <methodname>ReflectionClass::newLazyGhost</methodname>
      と同じシグネチャと目的を持つイニシャライザコールバック。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="reflectionclass.resetaslazyghost.parameters.options">
    <term><parameter>options</parameter></term>
    <listitem>
     <para>
      <parameter>options</parameter>には
      以下のフラグを組み合わせて指定できます:
      <variablelist>
       <varlistentry>
        <term>
         <constant>ReflectionClass::SKIP_INITIALIZATION_ON_SERIALIZE</constant>
        </term>
        <listitem>
         <simpara>
          デフォルトでは、レイジーオブジェクトのシリアライズは
          初期化がトリガーされます。このフラグを設定すると、
          初期化せずにシリアライズできるようになります。
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>ReflectionClass::SKIP_DESTRUCTOR</constant>
        </term>
        <listitem>
         <simpara>
          デフォルトでは、オブジェクトをレイジーにする前に、そのデストラクタが（存在すれば）
          呼び出されます。これは、オブジェクト内の既存の状態に関する安全性を提供します。
          このフラグはその動作を無効にし、デストラクタを呼び出さずにオブジェクトを
          レイジーとしてリセットできるようにします。
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   &return.void;
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   オブジェクトがレイジーで未初期化の場合、<classname>ReflectionException</classname>を
   スローします。
  </simpara>
  <simpara>
   オブジェクトが初期化中である場合、または<function>foreach</function>で
   プロパティが反復処理されている場合、<classname>Error</classname>を
   スローします。
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>ReflectionClass::newLazyGhost</methodname></member>
   <member><methodname>ReflectionClass::resetAsLazyProxy</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
