<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d2479dcf35d82aca39ee61f8ab36ceed78a869c Maintainer: mumumu Status: ready -->
<sect1 xml:id="migration81.deprecated">
 <title>PHP 8.1.x で推奨されなくなる機能</title>

 <sect2 xml:id="migration81.deprecated.core">
  <title>PHP コア</title>

  <sect3 xml:id="migration81.deprecated.core.serialize-interface">
   <title>
    <function>__serialize</function>,
    <function>__unserialize</function> がない状態で、
    <interfacename>Serializable</interfacename> を実装するのは推奨されない
   </title>

   <para>
    新しいこれらのメソッドだけを実装するか、
    このメソッドをサポートしていない
    PHP 7.4 より前のバージョンでも使う場合は、
    古いものと新しいンターフェイスを両方実装すべきです。
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.null-not-nullable-internal">
   <title>組み込み関数の nullable でない引数に &null; を渡した場合</title>

   <para>
    組み込み関数のスカラー型の引数は、
    デフォルトで nullable になっていますが、
    ユーザ定義の関数と組み合わせた場合、
    この振る舞いは推奨されなくなりました。
    この場合、スカラー型は nullable と明示的にマークする必要があるからです

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
var_dump(str_contains("foobar", null));
// Deprecated: Passing null to parameter #2 ($needle) of type string
//             is deprecated
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.implicit-float-conversion">
   <title>暗黙の &float; から &integer; への変換</title>

   <para>
    精度を損なうことになる
    &float; から &integer; への暗黙の変換は、
    推奨されなくなりました。
    これは配列のキーに &float; を使った場合や、
    型の強制 (coerciveモード) 時に &integer; 型を宣言した場合や、
    &integer; に対して演算子を適用する場合に影響します。
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$a = [];
$a[15.5]; // 推奨されません。0.5 がキーの値から失われるからです
$a[15.0]; // 15.0 == 15 なので OK
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.static-trait">
   <title>トレイトの <modifier>static</modifier> な要素をコールする</title>

   <para>
    トレイトにある
    <modifier>static</modifier>
    メソッドや、
    <modifier>static</modifier>
    なプロパティに直接アクセスすることは、推奨されなくなりました。
    これらは、トレイトを使っているクラスからのみアクセスすべきものです。
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.magic-sleep">
   <title><function>__sleep</function> から配列でない値を返す</title>

   <para>
    配列でない値を
    <link linkend="object.sleep">__sleep()</link>
    から返すと、警告が発生するようになりました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.void-by-ref">
   <title><type>void</type> の関数からリファレンスを返す</title>

   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function &test(): void {}
?>
]]>
     </programlisting>
    </informalexample>
    上記のような関数は矛盾しているため、
    呼び出された時に
    <literal>Only variable references should be returned by reference</literal>
    という <constant>E_NOTICE</constant>
    が既に発生するようになっています。
   </para>
  </sect3>

  <sect3 xml:id="migration81.deprecated.core.autovivification-false">
   <title>&false; な変数を自動的に復活させる挙動(Autovivification)</title>
   <para>
    Autovivification とは、
    値を追加しようとする際に配列を自動で生成する処理のことです。
    スカラー型の値からこのような処理を行うことは禁止されていますが、
    &false; だけは例外でした。
    このバージョンから、この例外も推奨されなくなります。
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$arr = false;
$arr[] = 2;   // 推奨されません
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <note>
    <para>
     &null; や 未定義値から、
     自動的に配列を生成する処理は未だ許可されています:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// 未定義値から配列を生成
$arr[] = 'some value';
$arr['doesNotExist'][] = 2;
// null から配列を生成
$arr = null;
$arr[] = 2;
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
  </sect3>

 </sect2>

 <sect2 xml:id="migration81.deprecated.ctype">
  <title>ctype 関数</title>

  <sect3 xml:id="migration81.deprecated.ctype.nonstring-arguments">
   <title>文字列でない引数の検証</title>

   <para>
    ctype関数 に文字列でない引数を渡すことは、
    推奨されなくなりました。
    将来のバージョンでは、引数は ASCII コードポイントではなく、
    文字列として解釈されるようになります。
    ユーザが意図する振る舞いによっては、
    引数を文字列にキャストするか、
    <function>chr</function>
    を明示的にコールすべきです。
    全ての <literal>ctype_*()</literal> 関数が影響を受けます。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.deprecated.date">
  <title>日付・時刻 関数</title>

  <para>
   <function>date_sunrise</function>
   と
   <function>date_sunset</function>
   は、推奨されなくなりました。
   <function>date_sun_info</function>
   を使って下さい。
  </para>

  <para>
   <function>strptime</function> 関数は、
   推奨されなくなりました。
   (ロケールに依存しないパースを行う場合)
   <function>date_parse_from_format</function>
   または
   (ロケールに依存するパースを行う場合)
   <methodname>IntlDateFormatter::parse</methodname>
   を代わりに使って下さい。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.filter">
  <title>Filter</title>

  <para>
   <constant>FILTER_SANITIZE_STRING</constant>
   と
   <constant>FILTER_SANITIZE_STRIPPED</constant>
   フィルタは、推奨されなくなりました。
  </para>
  <para>
   INI ディレクティブ
   <link linkend="ini.filter.default">filter.default</link>
   は、推奨されなくなりました。
   <!-- TODO Check that filter.default_flags -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.gd">
  <title>GD</title>

  <para>
   <function>imageopenpolygon</function> と
   <function>imagefilledpolygon</function>
   の
   <parameter>num_points</parameter> 引数は、
   推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.hash">
  <title>Hash</title>

  <para>
   <function>mhash</function>,
   <function>mhash_keygen_s2k</function>,
   <function>mhash_count</function>,
   <function>mhash_get_block_size</function>,
   <function>mhash_get_hash_name</function>
   は、推奨されなくなりました。
   <literal>hash_*()</literal> 関数を代わりに使って下さい。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.imap">
  <title>IMAP</title>

  <para>
   定数 <constant>NIL</constant> は、推奨されなくなりました。
   <literal>0</literal> を代わりに使って下さい。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.intl">
  <title>国際化関数(Intl)</title>

  <para>
   <methodname>IntlCalendar::roll</methodname>
   に &boolean; 引数を渡してコールすることは、
   推奨されなくなりました。
   &true; と &false;
   の代わりに、
   <literal>1</literal> と <literal>-1</literal>
   をそれぞれ渡すようにして下さい。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mbstring">
  <title>マルチバイト文字列</title>

  <para>
   <function>mb_check_encoding</function>
   関数を引数を渡さずにコールすることは、推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.mysqli">
  <title>MySQLi</title>

  <para>
   <property>mysqli_driver::$driver_version</property>
   プロパティは、推奨されなくなりました。
   このプロパティは意味がなく、時代遅れになっています。
   <constant>PHP_VERSION_ID</constant>
   を代わりに使って下さい。
  </para>

  <para>
   <parameter>mysqli</parameter> 引数を渡して、
   <methodname>mysqli::get_client_info</methodname> や
   <function>mysqli_get_client_info</function>
   をコールすることは、推奨されなくなりました。
   クライアントライブラリのバージョン情報を取得するには、
   <function>mysqli_get_client_info</function>
   を引数なしでコールするようにして下さい。
  </para>

  <para>
   <methodname>mysqli::init</methodname> メソッドは、
   推奨されなくなりました。
   <methodname>parent::init</methodname> のコールを
   <methodname>parent::__construct</methodname>
   に置き換えるようにして下さい。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.oci8">
  <title>OCI8</title>

  <para>
   INI ディレクティブ
   <link linkend="ini.oci8.old-oci-close-semantics">oci8.old_oci_close_semantics</link>
   は、推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.odbc">
  <title>ODBC</title>

  <para>
   <function>odbc_result_all</function> 関数は推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pdo">
  <title>PDO</title>

  <para>
   フェッチモードの定数 <constant>PDO::FETCH_SERIALIZE</constant>
   は、推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.pgsql">
  <title>PgSQL</title>

  <para>
   全ての
   <literal>pgsql_*()</literal>
   関数に対して、接続リソースを渡さないことは推奨されなくなりました。
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.soap">
  <title>SOAP</title>

  <para>
   <methodname>SoapClient::__construct</methodname>
   の
   <literal>ssl_method</literal> オプションは推奨されなくなりました。
   SSL コンテキストオプションを使うのが望ましいです。
   <!-- The direct equivalent would be
    crypto_method, but min_proto_version/max_proto_version are recommended
    instead. -->
  </para>
 </sect2>

 <sect2 xml:id="migration81.deprecated.standard">
  <title>Standard</title>

  <para>
   &object; に対して、
   <function>key</function>, <function>current</function>,
   <function>next</function>, <function>prev</function>,
   <function>reset</function>, <function>end</function>
   を呼び出すことは推奨されなくなりました。
   &object; を渡して
   <function>get_mangled_object_vars</function>
   を呼び出すか、
   <classname>ArrayIterator</classname>
   を使って下さい。
  </para>

  <para>
   INI ディレクティブ
   <link linkend="ini.auto-detect-line-endings">auto_detect_line_endings</link>
   は、推奨されなくなりました。
   必要な場合は、
   <literal>"\r"</literal> を手動で扱うようにして下さい。
  </para>

  <para>
   定数
   <constant>FILE_BINARY</constant> と
   <constant>FILE_TEXT</constant> は推奨されなくなりました。
   これらの定数は、使われたことがありませんでした。
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
