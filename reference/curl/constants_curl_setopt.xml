<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 6d21eef094840a7277af4735b8898f70ef9cd9ba Maintainer: nsfisis Status: ready -->
 <variablelist role="constant_list">
  <title><function>curl_setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ホストへの TCP 接続を確立する代わりに抽象 Unix ドメインソケットを使うようにし、
     そのパスを指定した <type>string</type> へと設定します。
     このオプションの使い方は <constant>CURLOPT_UNIX_SOCKET_PATH</constant> と同じです。
     これら 2 つのオプションは値を保持する領域を共有しているため、
     ハンドルごとに設定できるのはいずれか 1 つだけです。
     PHP 7.3.0 以降かつ cURL 7.53.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accept-encoding">
   <term>
    <constant>CURLOPT_ACCEPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リクエストの中で送られる <literal>Accept-Encoding:</literal> ヘッダーの内容を
     <type>string</type> で指定します。
     &null; をセットすると、<literal>Accept-Encoding:</literal> ヘッダーの送信を無効にします。
     デフォルト値は &null; です。
     cURL 7.21.6 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accepttimeout-ms">
   <term>
    <constant>CURLOPT_ACCEPTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     アクティブな FTP 接続を使用している場合に、
     cURL がサーバーからの接続を待機する最大ミリ秒数を指定します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>60000</literal> ミリ秒です。
     cURL 7.24.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-address-scope">
   <term>
    <constant>CURLOPT_ADDRESS_SCOPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     IPv6 アドレスに接続する際に使用するスコープ ID の値を指定します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.19.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL が Alt-Svc のキャッシュファイルとして使用するファイルの名前を <type>string</type> で指定します。
     既存のキャッシュ内容をこのファイルから読み込んだり、転送後にキャッシュをこのファイルへ書き戻したりできます。
     ただし、<constant>CURLOPT_ALTSVC_CTRL</constant> に <constant>CURLALTSVC_READONLYFILE</constant> が指定されている場合、
     書き込みはできません。
     PHP 8.2.0 以降かつ cURL 7.64.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このハンドルを使う転送において、cURL が Alt-Svc をどう処理するかを指示するために、
     適切な機能セットのビットマスクを設定します。cURL は HTTPS 経由でのみ Alt-Svc ヘッダーを受け付けます。
     また、代替オリジンが HTTPS で適切にホストされている場合にのみ、代替オリジンへのリクエストを最後まで実行します。
     いずれかのビットを設定すると alt-svc エンジンが有効になります。
     <constant>CURLALTSVC_<replaceable>*</replaceable></constant> 定数のいずれかを設定します。
     デフォルトでは Alt-Svc 処理は無効です。
     PHP 8.2.0 以降かつ cURL 7.64.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-append">
   <term>
    <constant>CURLOPT_APPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このオプションを <literal>1</literal> に設定すると、FTP アップロード時に
     リモートファイルを上書きするのではなく、末尾に追加するようになります。
     デフォルト値は <literal>0</literal> です。
     cURL 7.17.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、リクエストが <literal>Location:</literal> のリダイレクトによるものである場合、
     自動的に <literal>Referer:</literal> ヘッダーを設定します。
     デフォルト値は <literal>0</literal> です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     AWS V4 署名認証を HTTP(S) ヘッダーに <type>string</type> として指定します。
     このオプションは、<constant>CURLOPT_HTTPAUTH</constant> で設定された
     他の認証方法を上書きします。これと他の認証方法を組み合わせることはできません。
     PHP 8.2.0 以降かつ cURL 7.75.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     この定数は PHP 5.5.0 以降は用いられていません。
     PHP 8.4.0 以降は非推奨となっています。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     各読込で使用するバッファサイズを設定します。
     ただし、必ずしも指定した値が使われるとは限りません。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <constant>CURL_MAX_WRITE_SIZE</constant> (現在は 16kB) です。
     cURL 7.10 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     相手を検証するための証明書を格納したファイル名を <type>string</type> で指定します。
     このオプションは、<constant>CURLOPT_SSL_VERIFYPEER</constant> と組み合わせて用いた場合のみ意味を持ちます。
     絶対パスを指定する必要があるかもしれません。
     cURL 7.4.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     相手を検証するための証明書を格納した PEM ファイル名を <type>string</type> で指定します。
     このオプションは <constant>CURLOPT_CAINFO</constant> を上書きします。
     PHP 8.2.0 以降かつ cURL 7.77.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     CA 証明書を格納したディレクトリを <type>string</type> で指定します。
     <constant>CURLOPT_SSL_VERIFYPEER</constant> と一緒に使用してください。
     cURL 7.9.8 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     CA 証明書ストアのインメモリキャッシュが保持され、新しい接続に再利用される
     最大時間を秒単位で指定します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>86400</literal> (24 時間) です。
     PHP 8.3.0 以降かつ cURL 7.87.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; に設定すると、暗号化された通信の際に
     SSL 認証情報を <constant>STDERR</constant> へ出力します。
     <constant>CURLOPT_VERBOSE</constant> を有効にしている場合にのみ効果があります。
     デフォルト値は &false; です。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続するまでの最大待機秒数を指定します。
     0 を指定するといつまでも待機します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>300</literal> です。
     cURL 7.7.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続するまでの最大待機ミリ秒数を指定します。
     <literal>0</literal> を指定するといつまでも待機します。
     cURL がシステム標準のネームリゾルバを使うようにビルドされている場合、
     接続のその部分のタイムアウトは秒精度となり、
     指定できる最小の待機時間も 1 秒になります。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>300000</literal> です。
     cURL 7.16.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、必要なプロキシの認証を行って接続を確立するだけで、
     データ転送を行わなくなります。このオプションは
     HTTP、SMTP、POP3 で実装されています。
     デフォルト値は &false; です。
     cURL 7.15.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     URL のホストとポートの代わりに、指定したホストとポートに接続します。
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal> の形式の
     <type>string</type> を <type>array</type> で受け付けます。
     PHP 7.0.7 以降かつ cURL 7.49.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リクエストの中で使われる <literal>Cookie:</literal> ヘッダーの内容を <type>string</type> で指定します。
     複数のクッキーを指定する場合はセミコロンとスペースで区切ります (例: <literal>fruit=apple; colour=red</literal>)。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     クッキーデータを格納したファイル名を <type>string</type> で指定します。
     クッキーファイルは Netscape 形式か、通常の HTTP スタイルのヘッダーをそのままファイルにダンプしたものです。
     ファイル名が空の <type>string</type> の場合、クッキーは読み込まれませんが、クッキーの処理は
     行われます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL が保持しているすべてのクッキーを保存するファイル名を <type>string</type> で指定します。
     書込は cURL ハンドルが破棄されたときに行われます。
     cURL 7.9.0 以降で利用可能です。
     <warning>
      <simpara>
       PHP 8.0.0 以降、<function>curl_close</function> は
       何もしなくなり、ハンドルを破棄 <emphasis>しなく</emphasis> なりました。
       ハンドラが自動的に破棄されるよりも前にクッキーを書き出す必要がある場合、
       <code>curl_setopt($ch, CURLOPT_COOKIELIST, "FLUSH");</code> を実行してください。
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>string</literal> で指定されたクッキーを内部のクッキーストアに追加します。
     この文字列は Nescape/Mozilla 形式の単一行、または通常の HTTP スタイルの Set-Cookie ヘッダーです。
     <simplelist type="inline">
      <member>
       <literal>ALL</literal>
       はメモリ上に保持されているすべてのクッキーを削除し、
      </member>
      <member>
       <literal>SESS</literal>
       はメモリ上に保持されているすべてのセッションクッキーを削除し、
      </member>
      <member>
       <literal>FLUSH</literal>
       は <constant>CURLOPT_COOKIEJAR</constant> で指定されたファイルにすべてのクッキーを書き出し、
      </member>
      <member>
       <literal>RELOAD</literal>
       は <constant>CURLOPT_COOKIEFILE</constant> で指定されたファイルからすべてのクッキーを読み込みます
      </member>
     </simplelist>。
     cURL 7.14.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、現在の接続を新しいクッキーの「セッション」とみなします。
     これにより、cURL は以前のセッションから読み込まれる「セッションクッキー」をすべて無視するようになります。
     デフォルトでは、cURL はセッションクッキーかどうかに関わらず、
     すべてのクッキーを常に保存し読み込みます。
     セッションクッキーは、有効期限がなく
     この「セッション」中でのみ有効であることが意図されたクッキーです。
     cURL 7.9.7 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、Unix の改行コードを CRLF 改行コードに変換して
     送ります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlfile">
   <term>
    <constant>CURLOPT_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL 交換中の証明書検証で使用する CRL (Certificate Revocation List; 証明書失効リスト) (PEM 形式) を
     記載したファイルの名前を <type>string</type> で指定します。
     cURL が GnuTLS を使うようにビルドされている場合、
     渡した CRL が検証処理でどう使われるかを制御することはできません。
     cURL が OpenSSL を使うようにビルドされている場合、
     <literal>X509_V_FLAG_CRL_CHECK</literal> と
     <literal>X509_V_FLAG_CRL_CHECK_ALL</literal> の両方が設定され、
     CRL ファイルを渡したなら証明書チェーンの全要素に対して CRL のチェックが必要になります。
     また、<constant>CURLOPT_CRLFILE</constant> は OpenSSL のバグのため、
     cURL 7.71.0 以降では <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant> を暗示することに注意してください。
     cURL 7.19.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リクエストを送る際、<literal>GET</literal> や <literal>HEAD</literal>
     の代わりに用いるカスタムのリクエストメソッドを指定します。
     <literal>DELETE</literal> や、その他マイナーな HTTP リクエストを送りたいときに便利です。
     有効な値は、<literal>GET</literal>、<literal>POST</literal>、
     <literal>CONNECT</literal> などといったものです。
     つまり、ここに完全な HTTP のリクエスト行を入れてはいけません。
     例えば、<literal>GET /index.html HTTP/1.0\r\n\r\n</literal> を
     入れるのは誤りです。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     cURL 7.1.0 以降で利用可能です。
     <note>
      <para>
       サーバーがそのカスタムリクエストメソッドをサポートしていることを確かめるまでは
       使わないでください。
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     URL がスキーム名を持たない場合に使用するデフォルトのプロトコルを <type>string</type> で指定します。
     PHP 7.0.7 以降かつ cURL 7.45.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dirlistonly">
   <term>
    <constant>CURLOPT_DIRLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このオプションに <literal>1</literal> を設定すると、
     使っているプロトコルによって異なる動作をします。
     FTP および SFTP ベースの URL では、ディレクトリ内のファイル名のみを列挙します。
     POP3 では、POP3 サーバー上の電子メールメッセージを列挙します。
     FILE に対してこのオプションは効果がありません。
     このモードではディレクトリは常に列挙されるからです。
     このオプションを <constant>CURLOPT_WILDCARDMATCH</constant> と一緒に使うと、
     後者の効果がなくなります。
     デフォルト値は <literal>0</literal> です。
     cURL 7.17.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、URL にユーザー名を含められなくなります。
     デフォルトではユーザー名を含められます。
     PHP 7.3.0 以降かつ cURL 7.61.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     DNS のエントリーをメモリ上に保持する秒数を指定します。
     このオプションは、デフォルトで <literal>120</literal> (2分) に設定されています。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     DNS リゾルバがバインドされているネットワークインターフェース名を指定します。
     アドレスではなくインターフェース名を指定する必要があります。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     PHP 7.0.7 以降かつ cURL 7.33.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リゾルバがバインドされているローカル IPv4 アドレスを指定します。
     この引数は単一の数値 IPv4 アドレスを含んでいる必要があります。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     PHP 7.0.7 以降かつ cURL 7.33.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リゾルバがバインドされているローカル IPv5 アドレスを指定します。
     この引数は単一の数値 IPv6 アドレスを含んでいる必要があります。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     PHP 7.0.7 以降かつ cURL 7.33.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-servers">
   <term>
    <constant>CURLOPT_DNS_SERVERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     システムのデフォルト DNS サーバーの代わりに使用する DNS サーバーのリストを
     コンマ区切りの <type>string</type> で指定します
     (例: <literal>192.168.1.100,192.168.1.101:8080</literal>)。
     cURL 7.24.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、ドメイン名が複数の IP アドレスへと解決されたとき、
     アドレスをランダムな順番で使うために、返却されるアドレスの順序がシャッフルされます。
     IPv4 が IPv6 より優先して使われたり、あるいはその逆になったりする可能性があります。
     PHP 7.3.0 以降かつ cURL 7.60.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、グローバル DNS キャッシュを使うようになります。
     このオプションはスレッドセーフではありません。
     PHP がシングルスレッド用にビルドされている場合 (CLI、FCGI、Apache2-Prefork 等) に、
     条件付きでデフォルトで有効化されます。
     cURL 7.9.3 以降で利用可能ですが、cURL 7.11.1 以降は非推奨となりました。
     PHP 8.4 以降は、このオプションを指定しても何も起きなくなりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> を指定すると、DNS-over-HTTPS サーバーの SSL 証明書の名前フィールドをホスト名に対して検証します。
     PHP 8.2.0 以降かつ cURL 7.76.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、DNS-over-HTTPS サーバーの SSL 証明書の真正性を検証します。
     <literal>0</literal> を指定すると検証を無効化します。
     PHP 8.2.0 以降かつ cURL 7.76.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、DNS-over-HTTPS サーバーの証明書のステータスを
     TLS 拡張の「証明書ステータス要求」(OCSP stapling) を使って検証します。
     <literal>0</literal> を指定すると検証を無効化します。
     PHP 8.2.0 以降かつ cURL 7.76.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     DNS-over-HTTPS の URL を指定します。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     PHP 8.1.0 以降かつ cURL 7.62.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_RANDOM_FILE</constant> と似ていますが、
     Entropy Gathering Daemon ソケットのファイル名を指定します。
     cURL 7.7.0 以降で利用可能ですが、cURL 7.84.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>Accept-Encoding: </literal> ヘッダーの内容を <type>string</type> で指定します。
     これを指定するとレスポンスをデコードするようになります。サポートされているエンコーディングは、
     <simplelist type="inline">
      <member><literal>identity</literal></member>
      <member><literal>deflate</literal></member>
      <member><literal>gzip</literal></member>
     </simplelist> です。
     空の <type>string</type> を指定すると、
     サポートされている全エンコーディングタイプを含んだヘッダーが送られます。
     cURL 7.10 以降で利用可能ですが、cURL 7.21.6 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>Expect: 100-continue</literal> レスポンスのタイムアウトをミリ秒で指定します。
     デフォルト値は <literal>1000</literal> ミリ秒です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     PHP 7.0.7 以降かつ cURL 7.36.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、返された HTTP コードが 400 以上だったときにエラー情報と共に失敗するようになります。
     デフォルトの挙動では、コードを無視して通常どおりページを返します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送データを書き込むファイルのファイルハンドル <type>resource</type> を受け取ります。
     デフォルトは <constant>STDOUT</constant> (ブラウザウィンドウ) です。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.9.7 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、リモートのドキュメントの更新日時を取得しようとします。
     その値は、<function>curl_getinfo</function> に
     <constant>CURLINFO_FILETIME</constant> オプションを使うことで取得できます。
     cURL 7.5.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fnmatch-function">
   <term>
    <constant>CURLOPT_FNMATCH_FUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ワイルドカードのマッチングに用いられる <type>callable</type> を渡します。
     コールバックのシグニチャは以下のとおりです。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pattern</parameter></term>
       <listitem>
        <simpara>
         ワイルドカードパターン。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>string</parameter></term>
       <listitem>
        <simpara>
         ワイルドカードパターンとマッチしているか判定する <type>string</type>。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     この関数は、パターンが <type>string</type> とマッチしていれば <constant>CURL_FNMATCHFUNC_MATCH</constant> を、
     していなければ <constant>CURL_FNMATCHFUNC_NOMATCH</constant> を、
     エラー時は <constant>CURL_FNMATCHFUNC_FAIL</constant> を返さなければなりません。
     cURL 7.21.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、サーバーから HTTP ヘッダーの一部として送られた <literal>Location: </literal> ヘッダーを
     追跡するようになります。
     <constant>CURLOPT_MAXREDIRS</constant> も合わせてご覧ください。
     この定数は <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link> が有効になっていると利用できません。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、処理が完了したとき明示的に接続を閉じ、
     再利用のためにプールしないようになります。
     cURL 7.7.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、キャッシュされた接続を使う代わりに
     必ず新しい接続を用います。
     cURL 7.7.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、リモートのファイルを上書きするのではなく、
     追記するようになります。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.16.4 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_TRANSFERTEXT</constant> のエイリアスです。そちらを使用してください。
     cURL 7.1 以降で利用可能でしたが、cURL 7.11.1 からは非推奨となっており、
     最終的に cURL 7.15.5 まで利用可能でした。
     PHP 7.3.0 で削除されました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP ディレクトリの名前のみを列挙するには &true; を指定します。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.16.4 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP の <literal>PORT</literal> 命令で使用する IP アドレスを <type>string</type> で指定します。
     <literal>PORT</literal> 命令は、ここで指定した IP アドレスに接続するようリモートサーバーに指示します。
     この <type>string</type> には、単なる IP アドレス、ホスト名、
     ネットワークインターフェース名 (Unix で利用可能)、
     または <literal>-</literal> (システムのデフォルト IP アドレスを使用する場合) を指定できます。
     このオプションは <type>string</type> ないし &null; を受け取ります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP over SSL の認証方式 (有効化されている場合) を、
     <constant>CURLFTPAUTH_<replaceable>*</replaceable></constant> 定数のいずれかに指定します。
     デフォルト値は <constant>CURLFTPAUTH_DEFAULT</constant> です。
     cURL 7.12.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-account">
   <term>
    <constant>CURLOPT_FTP_ACCOUNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ユーザー名とパスワードがサーバーに渡された後、
     FTP 上で (<literal>ACCT</literal> コマンドを用いて) アカウント情報として送信される
     <type>string</type> を設定します。
     &null; を指定すると、アカウント情報の送信が無効化されます。
     デフォルト値は &null; です。
     cURL 7.13.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-alternative-to-user">
   <term>
    <constant>CURLOPT_FTP_ALTERNATIVE_TO_USER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>USER/PASS</literal> ネゴシエーションが失敗した場合に
     FTP での認証を試行するのに使われる <type>string</type> を指定します。
     cURL 7.15.5 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、FTP の操作で現在存在しないパスに遭遇した場合に
     不足しているディレクトリを作成します。
     cURL 7.10.7 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP(S) サーバー上のファイルにアクセスするために使用するメソッドを cURL に指示します。
     指定できる値は <constant>CURLFTPMETHOD_<replaceable>*</replaceable></constant> 定数のいずれかです。
     デフォルト値は <constant>CURLFTPMETHOD_MULTICWD</constant> です。
     cURL 7.15.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-response-timeout">
   <term>
    <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP サーバーからのレスポンスを待機するタイムアウト秒数を指定します。
     このオプションは <constant>CURLOPT_TIMEOUT</constant> を上書きします。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     このオプション名は PHP 8.4.0 で <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>
     へ置き換えられました。
     cURL 7.10.8 以降で利用可能ですが、cURL 7.85.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-skip-pasv-ip">
   <term>
    <constant>CURLOPT_FTP_SKIP_PASV_IP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このオプションを <literal>1</literal> に設定すると、
     cURL は <literal>PASV</literal> コマンドに対する 227 レスポンスでサーバーが提案した IP アドレスを使用せず、
     接続に使用した IP アドレスを使うようになります。
     227 レスポンスから受信したポート番号は無視されません。
     cURL 7.74.0 以降はデフォルト値が <literal>1</literal> で、
     それ以前は <literal>0</literal> です。
     cURL 7.15.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL 7.11.0 以降で利用可能ですが、cURL 7.16.4 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl-ccc">
   <term>
    <constant>CURLOPT_FTP_SSL_CCC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このオプションを指定すると、cURL が CCC (Clear Command Channel) を使うようになり、
     認証後に SSL/TLS レイヤーをシャットダウンして、
     残りの制御チャネル通信を暗号化しないようになります。
     <constant>CURLFTPSSL_CCC_<replaceable>*</replaceable></constant> 定数のいずれかを使用してください。
     デフォルト値は <constant>CURLFTPSSL_CCC_NONE</constant> です。
     cURL 7.16.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、アクティブ FTP ダウンロード時に <literal>EPRT</literal> (および <literal>LPRT</literal>) を使用します。
     &false; を指定すると、<literal>EPRT</literal> と <literal>LPRT</literal> を無効にし <literal>PORT</literal> のみを使用します。
     cURL 7.10.5 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、FTP 転送で <literal>PASV</literal> に戻る前にまず <literal>EPSV</literal> コマンドを試すようになります。
     &false; を指定すると <literal>EPSV</literal> が無効になります。
     cURL 7.9.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-pret">
   <term>
    <constant>CURLOPT_FTP_USE_PRET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、<literal>PASV</literal> (および <literal>EPSV</literal>) の前に
     <literal>PRET</literal> コマンドを送るようになります。
     アクティブ FTP 転送モードを使用している場合効果はありません。
     デフォルト値は <literal>0</literal> です。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-gssapi-delegation">
   <term>
    <constant>CURLOPT_GSSAPI_DELEGATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLGSSAPI_DELEGATION_FLAG</constant> を指定すると
     無条件で GSSAPI 資格情報の委任を許可します。
     <constant>CURLGSSAPI_DELEGATION_POLICY_FLAG</constant> を指定すると
     サービスチケットで <literal>OK-AS-DELEGATE</literal> フラグが設定されている場合のみ委任します。
     デフォルト値は <constant>CURLGSSAPI_DELEGATION_NONE</constant> です。
     cURL 7.22.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Happy Eyeballs アルゴリズムにおいて IPv6 に与えられるハンデを指定します。Happy Eyeballs は
     デュアルスタックホストに対して IPv4 と IPv6 の両方のアドレスへ接続を試行し、
     このタイムアウトミリ秒の間は IPv6 を優先します。
     デフォルト値は <constant>CURL_HET_DEFAULT</constant> (現在は 200 ミリ秒) です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     PHP 7.3.0 以降かつ cURL 7.59.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、HAProxy <literal>PROXY</literal> プロトコル v1 ヘッダーを接続開始時に送信します。
     デフォルトでは送信しません。
     PHP 7.3.0 以降かつ cURL 7.60.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、<constant>CURLOPT_WRITEFUNCTION</constant> で定義されたコールバックへと渡される出力に
     ヘッダーが含まれるようになります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>headerData</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>headerData</parameter></term>
       <listitem>
        <simpara>
         このコールバックが書き込まなければならないヘッダーデータ。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     このコールバックは、書き込んだバイト数を返さなければなりません。
     cURL 7.7.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP ヘッダーをプロキシとホストの両方に送信するか、個別に送信するかを設定します。
     指定可能な値は <constant>CURLHEADER_<replaceable>*</replaceable></constant> 定数のいずれかです。
     cURL 7.42.1 以降のデフォルト値は <constant>CURLHEADER_SEPARATE</constant> で、
     それ以前では <constant>CURLHEADER_UNIFIED</constant> です。
     PHP 7.0.7 以降かつ cURL 7.37.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HSTS (HTTP Strict Transport Security) のキャッシュファイル名を <type>string</type> で指定します。
     &null; を指定すると、ファイルの読み書きを行わずに HSTS を行うようになり、
     HSTS データを読み込むファイルのリストがクリアされます。
     PHP 8.2.0 以降かつ cURL 7.74.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLHSTS_<replaceable>*</replaceable></constant> 定数で定義された
     HSTS (HTTP Strict Transport Security) 機能のビットマスクを指定できます。
     PHP 8.2.0 以降かつ cURL 7.74.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP/0.9 でのレスポンスを許可するかどうかを指定します。cURL 7.66.0 以降のデフォルト値は &false; です。
     それより前のバージョンでは &true; でした。
     PHP 7.3.15 および 7.4.3 以降かつ cURL 7.64.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     エラーではなく有効なレスポンスとして扱われる HTTP <literal>200</literal> レスポンスの <type>array</type> を指定します。
     cURL 7.10.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     使用する HTTP 認証方法のビットマスクです。選択肢は以下のとおりです：
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_DIGEST</constant></member>
      <member><constant>CURLAUTH_GSSNEGOTIATE</constant></member>
      <member><constant>CURLAUTH_NTLM</constant></member>
      <member><constant>CURLAUTH_AWS_SIGV4</constant></member>
      <member><constant>CURLAUTH_ANY</constant></member>
      <member><constant>CURLAUTH_ANYSAFE</constant></member>
     </simplelist>
     2つ以上の認証方法を指定した場合、cURL はサーバーがどの認証方法をサポートしているか
     問い合わせ、最適なものを選択します。
     <constant>CURLAUTH_ANY</constant> は全ビットをオンにします。cURL は自動的に
     最も安全だと思われるものを選択します。
     <constant>CURLAUTH_ANYSAFE</constant> は、<constant>CURLAUTH_BASIC</constant> を除いた全ビットをオンにします。
     cURL は自動的に最も安全だと思われるものを選択します。
     cURL 7.10.6 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、HTTP リクエストのメソッドを <literal>GET</literal> にリセットします。
     デフォルトは <literal>GET</literal> のため、これが必要なのはリクエストメソッドが変更されていた場合のみです。
     cURL 7.8.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP ヘッダーフィールドの <type>array</type> を指定します。各要素の形式は以下のとおりです。
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、与えられた HTTP プロキシを通すようになります。
     cURL 7.3.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; を指定すると、生の HTTP レスポンスボディを取得できます。
     cURL 7.16.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-transfer-decoding">
   <term>
    <constant>CURLOPT_HTTP_TRANSFER_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>0</literal> を指定するとチャンク転送デコード処理を無効にします。
     <literal>1</literal> を指定するとチャンク転送デコード処理を有効にします。
     このオプションを <literal>0</literal> に設定しない限り、
     cURL はチャンク転送デコード処理をデフォルトで実行します。
     デフォルト値は <literal>1</literal> です。
     cURL 7.16.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_HTTP_VERSION_<replaceable>*</replaceable></constant> 定数のいずれかを指定することで、
     cURL に指定した HTTP バージョンを使わせることができます。
     cURL 7.9.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ignore-content-length">
   <term>
    <constant>CURLOPT_IGNORE_CONTENT_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> に設定すると、
     HTTP レスポンスの <literal>Content-Length</literal> ヘッダーを無視します。
     FTP 転送の際には、それを要求したりそれに依存したりしなくなります。
     デフォルト値は <literal>0</literal> です。
     cURL 7.14.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     アップロード時に読み込まれるファイルの
     ファイルハンドル <type>resource</type> を指定します。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.9.7 以降は非推奨となりました。
     代わりに <constant>CURLOPT_READDATA</constant> を使用してください。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リモートサイトにファイルをアップロードする際のファイルの予想サイズ (バイト単位) を指定します。
     このオプションを使用しても、cURL がより多くのデータを送信する可能性はあります。
     実際に送信される内容は
     <constant>CURLOPT_READFUNCTION</constant> に依存します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     使用する送信ネットワークインターフェースの名前を <type>string</type> で指定します。
     インターフェース名、IP アドレス、ホスト名のいずれかが指定できます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ホスト名を解決する際に、使用する IP アドレスの種類をアプリケーションが選択できるようにします。
     これは、複数の IP バージョンを利用してアドレスを解決するようなホスト名を使う場合のみ意味があります。
     <constant>CURL_IPRESOLVE_<replaceable>*</replaceable></constant> 定数のいずれかを設定してください。
     デフォルト値は <constant>CURL_IPRESOLVE_WHATEVER</constant> です。
     cURL 7.10.8 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert">
   <term>
    <constant>CURLOPT_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PEM 形式の CA 証明書を保持するファイル名を <type>string</type> で指定します。
     このオプションが指定されると、ピア証明書に対する追加のチェックが実行され、
     発行者が指定した証明書と実際に関連付けられているかどうかを確認します。
     チェックの結果を失敗と見なすには、
     このオプションを <constant>CURLOPT_SSL_VERIFYPEER</constant> オプションと組み合わせて使用する必要があります。
     cURL 7.19.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PEM 形式の CA SSL 証明書のバイナリデータが含まれた <type>string</type> を指定します。
     これが設定されていると、ピア証明書に対する追加のチェックが実行され、
     発行者がこのオプションで提供された証明書に関連付けられたものであることを確認します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、返された HTTP コードが <literal>300</literal> 以上の場合にリクエストボディの送信を継続するようになります。
     デフォルトでは、送信を中止し、ストリームないし接続を閉じます。
     手動 NTLM 認証に適しています。
     ほとんどのアプリケーションではこのオプションは必要ありません。
     PHP 7.3.0 以降かつ cURL 7.51.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_SSLKEY</constant> または <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant> の秘密鍵を
     使用するにあたって必要なパスワードを <type>string</type> で指定します。
     &null; を設定すると、これらのオプションでパスワードが使えなくなります。
     cURL 7.17.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     KRB4 (Kerberos 4) のセキュリティレベルを指定します。以下の <type>string</type> 値のいずれか
     (最弱から最強の順) が有効です：
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>
     指定した <type>string</type> がいずれにも一致しない場合、
     <literal>private</literal> が使われます。このオプションを &null; に設定すると
     KRB4 セキュリティが無効になります。現在、KRB4 セキュリティは
     FTP トランザクションでのみ動作します。
     cURL 7.3.0 以降で利用可能ですが、cURL 7.17.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krblevel">
   <term>
    <constant>CURLOPT_KRBLEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP の Kerberos セキュリティレベルを設定し、Kerberos に対応させます。
     以下の <type>string</type> のいずれかを設定する必要があります：
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>
     指定された <type>string</type> がいずれにも一致しない場合、
     <literal>private</literal> が使われます。
     このオプションを &null; に設定すると、FTP の Kerberos サポートが無効になります。
     デフォルト値は &null; です。
     cURL 7.16.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localport">
   <term>
    <constant>CURLOPT_LOCALPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続に用いるソケットのローカルポート番号を指定します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.15.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localportrange">
   <term>
    <constant>CURLOPT_LOCALPORTRANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL が動作するローカルポート番号を探す試行回数を指定します。
     検索は <constant>CURLOPT_LOCALPORT</constant> で設定されたポートから開始されます。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>1</literal> です。
     cURL 7.15.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>AUTH=NTLM</literal> や <literal>AUTH=*</literal> を介した優先認証メカニズムなど、
     プロトコル固有のログインオプションを設定します。
     <constant>CURLOPT_USERNAME</constant> オプションと併用すべきです。
     PHP 7.0.7 以降かつ cURL 7.34.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送速度がこの値を <constant>CURLOPT_LOW_SPEED_TIME</constant> 秒間下回っていた場合、
     PHP は転送を遅すぎるとみなして中止します。
     単位はバイト/秒です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送速度が <constant>CURLOPT_LOW_SPEED_LIMIT</constant> の値をここで指定した秒数の間下回っていた場合、
     PHP は転送を遅すぎるとみなして中止します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-auth">
   <term>
    <constant>CURLOPT_MAIL_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     別のサーバーにリレーされる送信メッセージの認証アドレス (アイデンティティ) を <type>string</type> で指定します。
     アドレスは山括弧 (<literal>&gt;&lt;</literal>) で囲まずに指定してください。
     空の <type>string</type> が使われた場合、RFC 2554 に従って山括弧の組が送信されます。
     cURL 7.25.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-from">
   <term>
    <constant>CURLOPT_MAIL_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SMTP メール送信時の送信者のメールアドレスを <type>string</type> で指定します。
     このメールアドレスは、山括弧 (<literal>&gt;&lt;</literal>) で囲んで指定する必要があり、
     指定されていない場合は自動的に追加されます。
     このパラメーターが指定されていない場合、空のアドレスが
     SMTP サーバーに送信され、メールが拒否される可能性があります。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt">
   <term>
    <constant>CURLOPT_MAIL_RCPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SMTP メールリクエストでサーバーに渡す受信者を、
     <type>string</type> の <type>array</type> で設定します。
     それぞれの受信者は、対になった山括弧 (<literal>&gt;&lt;</literal>) で囲んで指定する必要があります。
     最初の文字が山括弧でない場合、
     cURL は単一のメールアドレスが渡されたものと仮定し、
     そのアドレスを括弧で囲みます。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、<literal>RCPT TO</literal> コマンドが一部の受信者で失敗しても
     cURL はそのエラーを無視し、残りの成功した受信者に対して処理を継続します。
     すべての受信者でエラーになり、このフラグが指定されている場合、
     cURL は SMTP 通信を中止し
     最後の <literal>RCPT TO</literal> コマンドから受け取ったエラーを返します。
     cURL 8.2.0 で <constant>CURLOPT_MAIL_RCPT_ALLOWFAILS</constant> に置き換えられました。
     PHP 8.2.0 以降かつ cURL 7.69.0 以降で利用可能です。
     cURL 8.2.0 以降は非推奨となっています。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     既存の接続が再利用される可能性のある最大アイドル時間を指定します。
     デフォルトの最大アイドル時間は <literal>118</literal> 秒です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     PHP 8.2.0 以降かつ cURL 7.65.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     永続化された接続の最大数を指定します。
     制限に達すると、開いている接続の数が増えないよう、
     キャッシュ内の最も古いものが閉じられます。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.7.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize">
   <term>
    <constant>CURLOPT_MAXFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ダウンロードするファイルの最大受入サイズ (バイト単位) を指定します。
     リクエストされたファイルがこの値よりも大きいことがわかると、
     転送が中止され、<constant>CURLE_FILESIZE_EXCEEDED</constant> が返されます。
     <literal>0</literal> を渡すとこのオプションが無効になり、
     負のサイズを渡すと <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> が返されます。
     ダウンロード開始前にファイルサイズがわからない場合、
     このオプションは効果がありません。
     <literal>2GB</literal>を超えるサイズ制限を設定するには、
     <constant>CURLOPT_MAXFILESIZE_LARGE</constant> を使用する必要があります。
     cURL 8.4.0 以降では、転送中にこの閾値に達した場合にも
     進行中の転送を停止します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.10.8 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ダウンロードが許可される最大ファイルサイズ (バイト単位) です。リクエストされたファイルがこの値よりも大きいことが判明した場合、
     転送は開始されず、<constant>CURLE_FILESIZE_EXCEEDED</constant> が返されます。
     ファイルサイズが必ずしもダウンロード前にわかるとは限りません。そのようなファイルに対しては、
     ファイル転送が結果的にこの制限よりも大きくなったとしても、このオプションは効果がありません。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     PHP 8.2.0 以降かつ cURL 7.11.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     既存の接続が再利用されうる最大時間を、接続が作成されてからの秒数で指定します。
     キャッシュ内にこの値よりも古い接続が見つかった場合、進行中の転送が完了するとその接続は再利用されずに閉じられます。
     デフォルトは <literal>0</literal> 秒です。これは、このオプションが無効であり、すべての接続が再利用されうることを意味します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     PHP 8.2.0 以降かつ cURL 7.80.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リダイレクトの最大回数を指定します。<constant>CURLOPT_FOLLOWLOCATION</constant> と合わせて使用してください。
     デフォルト値の <literal>20</literal> は、無限リダイレクトを防ぐために設定されています。
     <literal>-1</literal> を指定すると何度でもリダイレクトするようになります。<literal>0</literal> を指定すると一切リダイレクトしなくなります。
     cURL 7.5.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送中の累積平均でダウンロードがこの速度 (バイト毎秒単位) を超えた場合、
     平均レートをこの値以下に保つために転送を一時停止します。
     デフォルトは無制限です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.15.5 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送中の累積平均でアップロードがこの速度 (バイト毎秒単位) を超えた場合、
     平均レートをこの値以下に保つために転送を一時停止します。
     デフォルトは無制限です。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.15.5 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLMIMEOPT_<replaceable>*</replaceable></constant> 定数のビットマスクを指定します。
     現在利用可能なオプションは、
     <constant>CURLMIMEOPT_FORMESCAPE</constant> のみです。
     PHP 8.3.0 以降かつ cURL 7.81.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると cURL 関数に関する出力が完全に抑制されます。
     このオプションの代わりに <constant>CURLOPT_RETURNTRANSFER</constant> を使用してください。
     cURL 7.1.0 以降で利用可能でしたが、cURL 7.8.0 からは非推奨となっており、
     cURL 7.15.5 を最後に削除されました。
     PHP 7.3.0 で削除されました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、
     接続しているリモートサイトのユーザー名とパスワードを探すために
     <filename>~/.netrc</filename> ファイルをスキャンします。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc-file">
   <term>
    <constant>CURLOPT_NETRC_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>.netrc</literal> ファイルへのフルパス名を含む <type>string</type> を指定します。
     このオプションが省略され、かつ <constant>CURLOPT_NETRC</constant> が設定されている場合、
     cURL は現在のユーザーのホームディレクトリにある
     <literal>.netrc</literal> ファイルをチェックします。
     cURL 7.11.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-directory-perms">
   <term>
    <constant>CURLOPT_NEW_DIRECTORY_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リモートサーバーで新しく作成されたディレクトリに設定されるパーミッションの値 (<type>int</type>) を設定します。
     デフォルト値は <literal>0755</literal> です。
     これを使用できるプロトコルは <literal>sftp://</literal>、<literal>scp://</literal>、
     <literal>file://</literal> のみです。
     cURL 7.16.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-file-perms">
   <term>
    <constant>CURLOPT_NEW_FILE_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リモートサーバーで新しく作成されたファイルに設定されるパーミッションの値 (<type>int</type>) を設定します。
     デフォルト値は <literal>0644</literal> です。
     これを使用できるプロトコルは
     <literal>sftp://</literal>、<literal>scp://</literal>、
     <literal>file://</literal> のみです。
     cURL 7.16.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定するとボディが出力から除外されます。
     HTTP(S) の場合、cURL は HEAD リクエストを実行します。他のほとんどのプロトコルの場合、
     cURL はボディデータを一切要求しません。
     これを &false; に変更すると、ボディデータが出力に含まれるようになります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると cURL 転送でプログレスメーターを無効化します。
     <note>
      <para>
       PHP はこのオプションを自動的に &true; に設定します。
       これを変えるのはデバッグ目的のみとしてください。
      </para>
     </note>
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noproxy">
   <term>
    <constant>CURLOPT_NOPROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     到達するのにプロキシを必要としないホスト名を、カンマ区切りのリストからなる <type>string</type> で設定します。
     このリスト内のそれぞれの名前は、ホスト名を含むドメインまたはホスト名自体として一致判定がなされます。
     この <type>string</type> で利用可能な唯一のワイルドカードは、
     すべてのホストにマッチする単一の <literal>*</literal> 文字です。
     これを指定すると実質的にプロキシが無効になります。
     このオプションに空の <type>string</type> を設定すると、すべてのホスト名でプロキシが有効になります。
     cURL 7.86.0 以降では、このオプションで設定する IP アドレスを
     CIDR 記法で指定できます。
     cURL 7.19.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、PHP プロセスにシグナルを送信しうる cURL 関数を使わないようになります。
     マルチスレッド SAPI では、タイムアウトオプションを使えるようにするためにデフォルトで有効になっています。
     cURL 7.10 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>string</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>passwordPrompt</parameter></methodparam>
      <methodparam><type>int</type><parameter>maximumPasswordLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>passwordPrompt</parameter></term>
       <listitem>
        <simpara>
         パスワードプロンプト。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>maximumPasswordLength</parameter></term>
       <listitem>
        <simpara>
         パスワードの最大長。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     このコールバックは、パスワードが入った <type>string</type> を返さなければなりません。
     cURL 7.4.2 以降で利用可能でしたが、cURL 7.11.1 からは非推奨となっており、
     cURL 7.15.5 を最後に削除されました。
     PHP 7.3.0 で削除されました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     認証で使用するパスワードを <type>string</type> で指定します。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、cURL が URL パスをサーバーに渡す前に書き換えないようになります。
     デフォルトは &false; で、URL のパス部分に含まれているかもしれない <literal>/../</literal> や <literal>/./</literal> の並びを圧縮します。
     これらは、RFC 3986 section 5.2.4 に従い削除されるべきと考えられます。
     PHP 7.0.7 以降かつ cURL 7.42.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ピン留めされた (ピンニングされた) 公開鍵を <type>string</type> で指定します。
     この <type>string</type> には、PEM または DER 形式のピン留めされた公開鍵のファイル名を指定できます。
     また、先頭に <literal>sha256//</literal> を付けて <literal>;</literal> で区切った
     任意の数の base64 エンコードされた sha256 ハッシュも指定できます。
     PHP 7.0.7 以降かつ cURL 7.39.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、新しい接続を作成して使用する前に、
     既存の接続が多重化できるかどうかを確認し、
     可能ならそうするよう待機します。
     PHP 7.0.7 以降かつ cURL 7.43.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     URL で指定されたポートや使用するプロトコルのデフォルトポートの代わりに
     接続する代替ポート番号を <type>int</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると HTTP の <literal>POST</literal> リクエストを実行します。
     このリクエストは <literal>application/x-www-form-urlencoded</literal> ヘッダーを使用します。
     デフォルト値は &false; です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP の <literal>POST</literal> 操作で送信する全データです。
     このパラメーターには、
     '<literal>para1=val1&amp;para2=val2&amp;...</literal>' のような URL エンコードされた <type>string</type> か、
     フィールド名をキー、フィールドデータを値とする <type>array</type> のいずれかを渡すことができます。
     <parameter>value</parameter> が <type>array</type> の場合、
     <literal>Content-Type</literal> ヘッダーは
     <literal>multipart/form-data</literal> に設定されます。
     ファイルは <classname>CURLFile</classname> または <classname>CURLStringFile</classname> を使って送信でき、
     その場合 <parameter>value</parameter> は <type>array</type> でなければなりません。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP リクエストが実行された後にサーバーで実行する
     FTP コマンドを <type>string</type> の <type>array</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_REDIR_POST_301</constant>、
     <constant>CURL_REDIR_POST_302</constant>、<constant>CURL_REDIR_POST_303</constant> のビットマスクを指定します。
     <constant>CURLOPT_FOLLOWLOCATION</constant> が設定されており
     かつ指定した種類のリダイレクトが発生した場合に、
     リダイレクト後のリクエストでも HTTP <literal>POST</literal> メソッドを使い続けるようになります。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プレプロキシとして使われるホスト名またはドット区切りの数値 IP アドレスを <type>string</type> で指定します。
     プレプロキシは、今後のリクエストにおいて <constant>CURLOPT_PROXY</constant> オプションで
     指定された HTTP(S) プロキシへ接続する前に cURL が接続するプロキシサーバーです。
     プレプロキシは SOCKS プロキシのみ可能で、使用する socks の種類を指定するために
     <literal>[scheme]://</literal> を頭に付けるべきです。
     数値の IPv6 アドレスは、[角括弧] で囲む必要があります。
     プレプロキシを空の <type>string</type> に設定すると、プレプロキシの使用が明示的に無効になります。
     この <type>string</type> でポート番号を指定するには、ホスト名の最後に <literal>:[port]</literal> を付加します。
     プロキシのポート番号は、必要に応じて個別のオプション <constant>CURLOPT_PROXYPORT</constant> で指定できます。
     ポートが指定されていない場合、デフォルトではポート 1080 が使用されます。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prequote">
   <term>
    <constant>CURLOPT_PREQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送タイプが設定された後にサーバーへ渡す FTP コマンドを
     <type>string</type> の <type>array</type> で指定します。
     これらのコマンドはディレクトリ列挙を行う際には実行されず、
     ファイル転送のみで実行されます。
     cURL 7.9.5 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     この cURL ハンドルに関連付ける任意のデータを指定します。
     このデータは、後に <function>curl_getinfo</function> の
     <constant>CURLINFO_PRIVATE</constant> オプションを使って取得できます。
     cURL はこのデータに対して何も行いません。
     cURL のマルチハンドルを使用する場合、このプライベートデータには通常
     標準的な cURL ハンドルを識別するための一意なキーを指定します。
     cURL 7.10.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         この転送でダウンロードされようとしている総バイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         これまでにダウンロードされたバイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         この転送でアップロードされようとしている総バイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         これまでにアップロードされたバイト数。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     転送を中断し、<constant>CURLE_ABORTED_BY_CALLBACK</constant> エラーをセットするには、
     このコールバックから非ゼロの <type>int</type> を返してください。
     <note>
      <para>
       このコールバックが呼ばれるのは、<constant>CURLOPT_NOPROGRESS</constant> オプションが
       &false; に設定されている場合のみです。
      </para>
     </note>
     cURL 7.1.0 以降で利用可能ですが、cURL 7.32.0 以降は非推奨となりました。
     代わりに <constant>CURLOPT_XFERINFOFUNCTION</constant> を用いてください。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLPROTO_<replaceable>*</replaceable></constant> 値のビットマスクを指定します。
     これが使われた場合、cURL が転送で使用できるプロトコルを制限します。
     デフォルトは <constant>CURLPROTO_ALL</constant> で、cURL はサポートするすべてのプロトコルを受け入れます。
     <constant>CURLOPT_REDIR_PROTOCOLS</constant> も参照してください。
     cURL 7.19.4 以降で利用可能ですが、cURL 7.85.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送で許可するプロトコル名 (URL スキーム) をカンマ区切りリストの <type>string</type> で指定します。
     大文字小文字は区別しません。
     <literal>ALL</literal> を指定すると全てのプロトコルが許可されます。
     デフォルトでは、サポートする全プロトコルを受け入れます。
     利用可能なプロトコルは以下のとおりです：
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
     </simplelist>
     PHP 8.3.0 以降かつ cURL 7.85.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リクエストをトンネリングする HTTP プロキシを <type>string</type> で指定します。
     ホスト名、ドット区切りの数値 IP アドレス、
     [角括弧] 内に書かれた数値 IPv6 アドレスのいずれかである必要があります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシ接続で使用する HTTP 認証方法を
     <constant>CURLAUTH_<replaceable>*</replaceable></constant> 定数のビットマスクで指定します。
     プロキシ認証では、現在 <constant>CURLAUTH_BASIC</constant> と
     <constant>CURLAUTH_NTLM</constant> のみがサポートされています。
     デフォルト値は <constant>CURLAUTH_BASIC</constant> です。
     cURL 7.10.7 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシに渡すカスタム HTTP ヘッダーを <type>string</type> の <type>array</type> で指定します。
     PHP 7.0.7 以降かつ cURL 7.37.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxypassword">
   <term>
    <constant>CURLOPT_PROXYPASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシでの認証に使用するパスワードを <type>string</type> で指定します。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続するプロキシのポート番号を <type>int</type> で指定します。
     このポート番号は <constant>CURLOPT_PROXY</constant> でも設定できます。
     これを 0 に設定すると、cURL はデフォルトのプロキシポート番号か
     プロキシ URL <type>string</type> で指定されたポート番号を使用します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシの種類を <constant>CURLPROXY_<replaceable>*</replaceable></constant> 定数のいずれかで指定します。
     デフォルト値は <constant>CURLPROXY_HTTP</constant> です。
     cURL 7.10 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyusername">
   <term>
    <constant>CURLOPT_PROXYUSERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシでの認証に使用するユーザー名を <type>string</type> で指定します。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシへの接続で使用するユーザー名とパスワードを、
     <literal>[ユーザー名]:[パスワード]</literal> の形式の
     <type>string</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシ Certificate Authority (CA) バンドルへのパスを指定します。
     HTTPS プロキシを検証するための一つ以上の証明書を保持するファイルのパスを <type>string</type> で指定します。
     このオプションは HTTPS プロキシへの接続用であり、HTTPS サーバー用ではありません。
     デフォルトでは、cURL の cacert バンドルが格納されていると思われる
     システムパスに設定されます。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシを検証するための一つ以上の証明書を保持する PEM ファイルの名前を <type>string</type> で指定します。
     このオプションは HTTPS プロキシへの接続用であり、HTTPS サーバー用ではありません。
     デフォルトでは、cURL の cacert バンドルが格納されていると思われる
     システムパスに設定されます。
     PHP 8.2.0 以降かつ cURL 7.77.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシを検証するための CA 証明書が格納されたディレクトリを <type>string</type> で指定します。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL 交換中の証明書検証で使用する PEM 形式の CRL (Certificate Revocation List; 証明書失効リスト) を
     記載したファイルの名前を <type>string</type> で指定します。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシ発行者の SSL 証明書ファイル名を <type>string</type> で指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシ発行者の SSL 証明書を含む <type>string</type> を指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_PROXY_SSLKEY</constant> の秘密鍵を使用するために必要なパスワードを <type>string</type> で指定します。
     証明書を読み込むのにはパスフレーズは不要ですが、
     秘密鍵を読み込むためには必要です。
     このオプションは HTTPS プロキシへの接続用です。HTTPS サーバーへの接続用ではありません。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシ用のピン留めされた (ピンニングされた) 公開鍵を指定します。
     この <type>string</type> には、PEM または DER 形式のピン留めされた公開鍵のファイル名を指定できます。
     また、先頭に <literal>sha256//</literal> を付けて <literal>;</literal> で区切った
     任意の数の base64 エンコードされた sha256 ハッシュも指定できます。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシ認証サービス名を <type>string</type> で指定します。
     PHP 7.0.7 以降かつ、HTTP プロキシを使う場合は cURL 7.43.0 以降、SOCKS5 プロキシを使う場合は cURL 7.49.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシへの接続に用いるクライアント証明書のファイル名を <type>string</type> で指定します。
     Secure Transport でのデフォルト形式は <literal>P12</literal>、その他のエンジンでのデフォルト形式は <literal>PEM</literal> です。
     この形式は <constant>CURLOPT_PROXY_SSLCERTTYPE</constant> で変更できます。
     NSS または Secure Transport では、セキュリティデータベースで名前が付けられた
     証明書のニックネームも指定できます。
     カレントディレクトリのファイルを使う場合、
     ニックネームとの混同を避けるために <literal>./</literal> を頭に付ける必要があります。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシへの接続時に使用するクライアント証明書の形式を <type>string</type> で指定します。
     Secure Transport 以外では、サポートされている形式は <literal>PEM</literal> と <literal>DER</literal> です。
     OpenSSL (バージョン 0.9.3 以降) と Secure Transport
     (iOS 5 以降または OS X 10.7 以降) では、PKCS#12 でエンコードされたファイル用の
     <literal>P12</literal> もサポートします。デフォルトは <literal>PEM</literal> です。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL プロキシクライアント証明書を含む <type>string</type> を指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシへの接続に使用する秘密鍵のファイル名を <type>string</type> で指定します。
     デフォルトの形式は <literal>PEM</literal>で、
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant> を使って変更できます。
     (iOS および Mac OS X の場合) Secure Transport を使うように cURL をビルドした場合、このオプションは無視されます。
     TLS を有効にしてビルドした場合にのみ利用可能です。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     秘密鍵の形式を <type>string</type> で指定します。
     サポートされている形式は以下のとおりです：
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシへ接続するための秘密鍵を含む <type>string</type> を指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     希望する HTTPS プロキシの TLS バージョンを
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant> 定数のいずれかで指定します。
     デフォルト値は <constant>CURL_SSLVERSION_DEFAULT</constant> です。
     <warning>
      <simpara>
       このオプションは設定せずに、デフォルトをそのまま用いた方がよいでしょう。
       デフォルトの <constant>CURL_SSLVERSION_DEFAULT</constant> は、
       リモートの SSL プロトコルのバージョンを判別しようと試みます。
      </simpara>
     </warning>
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS プロキシへの接続に使用する暗号をコロン区切りの <type>string</type> で指定します。
     OpenSSL で使用する場合、カンマとスペースも区切り文字として使うことができ、
     <literal>!</literal>、<literal>-</literal>、<literal>+</literal> を演算子として使用できます。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシの SSL 動作オプションを指定します。
     これは <constant>CURLSSLOPT_<replaceable>*</replaceable></constant> 定数のビットマスクです。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> を指定すると、HTTPS プロキシの証明書名フィールドをプロキシ名と照合して検証します。
     <literal>0</literal> を指定すると、証明書で使用されている名前に関係なく接続が成功します。
     この機能は注意して使用してください！
     cURL 7.28.0 以前では、<literal>1</literal> をデバッグオプションとして指定できます。
     cURL 7.28.1 から 7.65.3では、<literal>1</literal> を指定すると <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> が返されます。
     cURL 7.66.0 以降では <literal>1</literal> は <literal>2</literal> と同じ値として扱われます。
     デフォルト値は <literal>2</literal> です。
     本番環境では、このオプションの値は <literal>2</literal> のままにしておくべきです。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; を指定すると cURL が ピア証明書を検証しなくなります。
     検証に使用する代替証明書は <constant>CURLOPT_CAINFO</constant> オプションで指定するか、
     証明書ディレクトリを <constant>CURLOPT_CAPATH</constant> オプションで指定できます。
     &false; を指定すると、ピア証明書の検証は無条件で成功します。
     デフォルトは &true; です。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     プロキシへの TLS 1.3 接続に使用する暗号をコロン区切りの <type>string</type> で指定します。
     このオプションは現在、cURL が OpenSSL 1.1.1 以降を使用してビルドされた場合にのみ使用されます。
     その他の SSL バックエンドを使用する場合、TLS 1.3 の暗号スイートは
     <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant> オプションで設定できます。
     PHP 7.3.0 以降かつ cURL 7.61.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> オプションで指定された
     TLS の認証方法で用いるパスワードを <type>string</type> で指定します。
     <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> オプションも合わせて設定する必要があります。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTPS 接続で用いられる TLS の認証方法を <type>string</type> で指定します。
     サポートされている方法は <literal>SRP</literal> です。
     <note>
      <para>
       TLS の Secure Remote Password (SRP) 認証は、両者が共有シークレットを持っている場合に
       相互認証を提供します。TLS-SRP を使用するには、
       <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> オプションと
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> オプションも設定する必要があります。
      </para>
     </note>
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>オプションで指定された
     HTTPS プロキシの TLS 認証方法に使用するユーザー名を指定します。
     <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> オプションも合わせて設定する必要があります。
     PHP 7.3.0 以降かつ cURL 7.52.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-transfer-mode">
   <term>
    <constant>CURLOPT_PROXY_TRANSFER_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、HTTP のプロキシを経由して行われる FTP 転送の転送モード (バイナリないし ASCII) を設定するために
     URL へ <literal>type=a</literal> または <literal>type=i</literal> を付加するようになります。
     この設定がなかったり <literal>0</literal> に設定されていたりする場合、
     プロキシ経由で FTP を実行するにあたって
     <constant>CURLOPT_TRANSFERTEXT</constant> は無視されます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.18.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると HTTP PUT でファイルを送信します。PUT するファイルは
     <constant>CURLOPT_READDATA</constant> と <constant>CURLOPT_INFILESIZE</constant> で設定しなければなりません。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.12.1 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、cURL がタイムアウトから復帰する際に、リソースの解放処理をスキップします。
     これにより、関連リソースがリークする可能性を犠牲にして、
     cURL プロセスを迅速に終了できるようになります。
     PHP 8.3.0 以降かつ cURL 7.87.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP リクエストの前にサーバーで実行する FTP コマンドを <type>string</type> の <type>array</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL 用の乱数生成器のシードに用いるファイル名を <type>string</type> で指定します。
     cURL 7.7.0 以降で利用可能ですが、cURL 7.84.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     取得するデータの範囲を <literal>X-Y</literal> 形式の <type>string</type> で指定します (X、Y の片方は省略できます)。
     HTTP 転送では、<literal>X-Y,N-M</literal> 形式でカンマ区切りの複数の範囲も指定できます。
     &null; を指定すると、バイト範囲のリクエストは無効になります。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readdata">
   <term>
    <constant>CURLOPT_READDATA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_READFUNCTION</constant> で設定されたファイル読み取り関数によって
     使用されるファイルポインタ <type>resource</type> を指定します。
     cURL 7.9.7 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>string</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>resource</type><parameter>streamResource</parameter></methodparam>
      <methodparam><type>int</type><parameter>maxAmountOfDataToRead</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>streamResource</parameter></term>
       <listitem>
        <simpara>
         <constant>CURLOPT_READDATA</constant> オプションを通して
         cURL へと渡されたストリーム <type>resource</type>。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>maxAmountOfDataToRead</parameter></term>
       <listitem>
        <simpara>
         読み出すべきデータの最大長。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     このコールバックは、要求されたデータ長以下の <type>string</type> を
     返さなければなりません。
     典型的には、渡されたストリーム <type>resource</type> からデータを読み出して返します。
     <literal>EOF</literal> を伝えるためには空の <type>string</type> を返してください。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_FOLLOWLOCATION</constant> が有効な場合に、
     リダイレクトで追跡する際の使用可能なプロトコルを
     <constant>CURLPROTO_<replaceable>*</replaceable></constant> 値のビットマスクで制限します。
     これにより、特定の転送でリダイレクト時にプロトコルのサブセットのみを使用するように制限できます。
     cURL 7.19.4 以降、cURL はデフォルトで <literal>FILE</literal> と <literal>SCP</literal> を除く
     すべてのプロトコルで追跡を許可します。
     cURL 7.19.4 より前は、cURL はサポートされているすべてのプロトコルを無条件で追跡していました。
     プロトコルの定数については <constant>CURLOPT_PROTOCOLS</constant> も参照してください。
     cURL 7.19.4 以降で利用可能ですが、cURL 7.85.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_FOLLOWLOCATION</constant> が有効な場合に、リダイレクトでの追跡を許可する
     プロトコル名 (URL スキーム) をカンマ区切りリストの <type>string</type> で指定します。
     プロトコル名の大文字小文字は区別しません。
     <literal>ALL</literal> を指定するとすべてのプロトコルで追跡を有効にします。
     cURL 7.65.2 以降、デフォルトは <literal>FTP</literal>、
     <literal>FTPS</literal>、<literal>HTTP</literal>、<literal>HTTPS</literal> です。
     cURL 7.40.0 から 7.65.1 では、
     <literal>FILE</literal>、<literal>SCP</literal>、<literal>SMB</literal>、
     <literal>SMBS</literal> を除くすべてのプロトコルがデフォルトでした。
     cURL 7.40.0 より前は、<literal>FILE</literal> と <literal>SCP</literal> を除く
     すべてのプロトコルがデフォルトでした。
     利用可能なプロトコルは以下のとおりです：
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
     </simplelist>
     PHP 8.3.0 以降かつ cURL 7.85.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リクエストで使用する <literal>Referer: </literal> ヘッダーの内容を
     <type>string</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     URL から抽出されたパスに代わって
     今後のリクエストで使用するパスを <type>string</type> で指定します。
     PHP 7.3.0 以降かつ cURL 7.55.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     特定のホスト・ポートの組み合わせに対するカスタムアドレスを、
     コロン区切りの <type>string</type> の <type>array</type> で指定します。
     具体的な形式は以下のとおりです：
     <code>
      array(
        "example.com:80:127.0.0.1",
        "example2.com:443:127.0.0.2",
      )
     </code>
     cURL 7.21.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送を再開するバイト単位のオフセットを指定します。
     このオプションは、有効な <type>int</type> にキャストできる任意の値を受け付けます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、転送の出力を直接出力する代わりに、
     <function>curl_exec</function> の戻り値として <type>string</type> の形で返します。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-client-cseq">
   <term>
    <constant>CURLOPT_RTSP_CLIENT_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     次の RTSP リクエストに対して発行する CSEQ 番号を <type>int</type> で指定します。
     アプリケーションが以前切断された接続を再開するときに有用です。
     以後 CSEQ はこの新しい番号からインクリメントされます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-request">
   <term>
    <constant>CURLOPT_RTSP_REQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     作成する RTSP リクエストの種類を指定します。
     <constant>CURL_RTSPREQ_<replaceable>*</replaceable></constant> 定数のいずれかを使う必要があります。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-server-cseq">
   <term>
    <constant>CURLOPT_RTSP_SERVER_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     次のサーバーからクライアントへの RTSP リクエストで期待する CSEQ 番号を <type>int</type> で指定します。
     この機能 (サーバーリクエストの待ち受け) は未実装です。
     デフォルト値は <literal>0</literal> です。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-session-id">
   <term>
    <constant>CURLOPT_RTSP_SESSION_ID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     このハンドルの現在の RTSP セッション ID の値を <type>string</type> で指定します。
     この値が何らかの非 &null; 値に設定されると、
     サーバーから受信した ID が一致しない場合
     cURL は <constant>CURLE_RTSP_SESSION_ERROR</constant> を返します。
     &null; に設定されている場合、サーバーが最初にレスポンス内で ID を設定したときに
     cURL が自動的に ID を設定します。
     デフォルトは &null; です。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-stream-uri">
   <term>
    <constant>CURLOPT_RTSP_STREAM_URI</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     操作するストリーム URI を <type>string</type> で指定します。
     設定されていない場合、cURL は RTSP ストリーム URI の代わりに <literal>*</literal> を渡し、
     一般的なサーバーオプションで動作します。
     RTSP の場合、<literal>CURLOPT_RTSP_STREAM_URI</literal> は
     リクエストヘッダーでサーバーへ送信する URL を表し、
     <literal>CURLOPT_URL</literal> は接続先を示します。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-transport">
   <term>
    <constant>CURLOPT_RTSP_TRANSPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     この RTSP セッションの <literal>Transport:</literal> ヘッダーを指定します。
     cURL 7.20.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     常に &true; です (訳注: &true; 以外の値を設定しようとするとエラーになります)。
     cURL では <constant>CURLOPT_POSTFIELDS</constant> で <literal>@</literal> から始まる値を渡すことで
     ファイルをアップロードできますが、これを無効にします。
     これにより、<literal>@</literal> で始まる値をフィールドとして安全に渡すことができます。
     ファイルのアップロードには <classname>CURLFile</classname> が代わりに使用できます。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送で用いる認可 ID (authzid) を <type>string</type> で指定します。
     これは PLAIN SASL 認証メカニズムのみに適用され、指定は任意です。
     指定されていない場合、ユーザー名で指定された認証 ID (authcid) のみがパスワードとともにサーバーに送信されます。
     authzid が与えられていない場合、サーバーは authcid から authzid を導出し、それを内部的に使用します。
     PHP 8.2.0 以降かつ cURL 7.66.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、最初のパケットで初期レスポンスの送信が有効になります。
     PHP 7.0.7 以降かつ cURL 7.31.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     認証サービス名を <type>string</type> で指定します。
     PHP 7.0.7 以降かつ cURL 7.43.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <function>curl_share_init</function> の返り値を渡します。
     この cURL ハンドルが、指定した共有ハンドルのデータを使用するようにします。
     cURL 7.10 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     使用する SOCKS5 の認証方法を指定します。選択肢は以下のとおりです：
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_GSSAPI</constant></member>
      <member><constant>CURLAUTH_NONE</constant></member>
     </simplelist>
     複数のメソッドが設定されている場合、cURL はサーバーをポーリングして
     サポートされるメソッドを確認し、最適なものを選択します。
     デフォルト値は <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal> です。
     実際のユーザー名とパスワードは <constant>CURLOPT_PROXYUSERPWD</constant> オプションで設定します。
     PHP 7.3.0 以降かつ cURL 7.55.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-nec">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_NEC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると
     GSSAPI ネゴシエーションの一部としての保護モードネゴシエーションの非保護交換を有効にします。
     <literal>0</literal> を指定すると無効にします。
     cURL 7.19.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-service">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_SERVICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SOCKS5 サービスの名前を <type>string</type> で指定します。
     デフォルト値は <literal>rcmd</literal> です。
     cURL 7.19.4 以降で利用可能ですが、cURL 7.49.0 以降は非推奨となりました。
     代わりに <constant>CURLOPT_PROXY_SERVICE_NAME</constant> を使用してください。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下の定数の 1 つ以上から構成されるビットマスクを指定します：
     <simplelist type="inline">
      <member><constant>CURLSSH_AUTH_PUBLICKEY</constant></member>
      <member><constant>CURLSSH_AUTH_PASSWORD</constant></member>
      <member><constant>CURLSSH_AUTH_HOST</constant></member>
      <member><constant>CURLSSH_AUTH_KEYBOARD</constant></member>
      <member><constant>CURLSSH_AUTH_AGENT</constant></member>
      <member><constant>CURLSSH_AUTH_ANY</constant></member>
     </simplelist>
     デフォルト値は <constant>CURLSSH_AUTH_ANY</constant> です。
     cURL 7.16.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると内蔵の SSH 圧縮が有効になり、&false; を指定すると無効になります。
     サーバーがこのリクエストを無視する可能性があることに注意してください。
     デフォルト値は &false; です。
     PHP 7.3.0 以降かつ cURL 7.56.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSH ホストキーの検証が必要になった場合に呼ばれる <type>callable</type> を指定します。
     このコールバックは、以下のシグニチャである必要があります。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyType</parameter></methodparam>
      <methodparam><type>string</type><parameter>key</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyType</parameter></term>
       <listitem>
        <simpara>
         <constant>CURLKHTYPE_<replaceable>*</replaceable></constant> のうちいずれかのキーの種類。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>key</parameter></term>
       <listitem>
        <simpara>
         チェックするキー。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyLength</parameter></term>
       <listitem>
        <simpara>
         キーのバイト長。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     このコールバックは <constant>CURLOPT_SSH_KNOWNHOSTS</constant> を上書きします。
     PHP 8.3.0 以降かつ cURL 7.84.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リモートホストの公開鍵の MD5 チェックサムを、32 桁の十六進数の <type>string</type> で指定します。
     md5sum が一致しない限り、cURL はホストへの接続を拒否します。
     このオプションは SCP 転送と SFTP 転送のみに対応しています。
     cURL 7.17.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     リモートホストの公開鍵の SHA256 ハッシュを、base64 エンコードされた <type>string</type> で指定します。
     与えられたハッシュがリモートホストから提供されるハッシュと一致しない場合、転送は失敗します。
     PHP 8.2.0 以降かつ cURL 7.80.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-knownhosts">
   <term>
    <constant>CURLOPT_SSH_KNOWNHOSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     使用する <filename>known_host</filename> ファイルの名前を指定します。
     このファイルには、libssh2 でサポートされている OpenSSH ファイル形式を用いてください。
     cURL 7.19.6 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     秘密鍵のファイル名を指定します。このオプションが指定されない場合、
     環境変数 HOME が設定されていれば <filename>$HOME/.ssh/id_dsa</filename> を、
     設定されていなければカレントディレクトリの <literal>id_dsa</literal> をデフォルトとします。
     ファイルがパスワードで保護されている場合、
     <constant>CURLOPT_KEYPASSWD</constant> でパスワードを指定します。
     cURL 7.16.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     公開鍵のファイル名を指定します。このオプションが指定されない場合、
     環境変数 HOME が設定されていれば <filename>$HOME/.ssh/id_dsa.pub</filename> を、
     設定されていなければカレントディレクトリの <literal>id_dsa.pub</literal> をデフォルトとします。
     cURL 7.16.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PEM 形式の証明書を含むファイル名を指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_SSLCERT</constant> の証明書を使用するために必要なパスワードを指定します。
     cURL 7.1.0 以降で利用可能ですが、cURL 7.17.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     証明書のフォーマットを <type>string</type> で指定します。サポートされているフォーマット：
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
      <member><literal>P12</literal></member>
     </simplelist>
     <literal>P12</literal> (PKCS#12 でエンコードされたファイル用) は OpenSSL 0.9.3 以降で利用可能です。
     デフォルト値は <literal>PEM</literal> です。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL のクライアント証明書を <type>string</type> で指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_SSLKEY</constant> で指定された SSL 秘密鍵で用いる暗号化エンジンの識別子を <type>string</type> で指定します。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     非対称暗号化操作に用いられる暗号化エンジンの識別子を <type>string</type> で指定します。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL 秘密鍵を含むファイル名を指定します。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_SSLKEY</constant>
     で指定された SSL 秘密鍵を使用するために必要な秘密パスワードを設定します。
     <note>
      <para>
       このオプションには機密パスワードが含まれているため、
       これを含む PHP スクリプトを必ず安全に保つようにしてください。
      </para>
     </note>
     cURL 7.9.3 以降で利用可能ですが、cURL 7.17.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_SSLKEY</constant> で指定された SSL の秘密鍵の種類を設定します。
     サポートされている鍵の種類は以下のとおりです：
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>
     デフォルト値は <literal>PEM</literal> です。
     cURL 7.9.3 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     クライアント証明書用の秘密鍵を <type>string</type> で指定します。
     PHP 8.1.0 以降かつ cURL 7.71.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>
     定数のいずれかを指定します。
     <warning>
      <simpara>
       このオプションは設定せずに、デフォルトをそのまま用いた方がよいでしょう。
       これを <constant>CURL_SSLVERSION_SSLv2</constant> や
       <constant>CURL_SSLVERSION_SSLv3</constant> に設定するのは、
       SSLv2 や SSLv3 の既知の脆弱性を考えれば極めて危険です。
      </simpara>
     </warning>
     デフォルト値は <constant>CURL_SSLVERSION_DEFAULT</constant> です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     TLS 1.2 (1.1、1.0) の接続に用いる暗号をコロン区切りの <type>string</type> で指定します。
     cURL 7.9 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     楕円曲線アルゴリズムをコロン区切りリストで指定します。例えば、
     <literal>X25519:P-521</literal> は 2 つの楕円曲線を指定している有効なリストです。
     このオプションは、cURL をビルドする際に指定した SSL バックエンドがそのアルゴリズムをサポートしていれば、
     SSL ハンドシェイクにおけるクライアントの鍵交換アルゴリズムを定義します。
     PHP 8.2.0 以降かつ cURL 7.73.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; を指定すると SSL ハンドシェイクで ALPN を無効にします
     (cURL をビルドする際に指定した SSL バックエンドがそれをサポートしている場合)。
     ALPN は http2 のネゴシエーションに使われるものです。
     PHP 7.0.7 以降かつ cURL 7.36.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; を指定すると SSL ハンドシェイクで NPN を無効にします
     (cURL をビルドする際に指定した SSL バックエンドがそれをサポートしている場合)。
     NPN は http2 のネゴシエーションに使われるものです。
     PHP 7.0.7 以降かつ cURL 7.36.0 以降で利用可能ですが、cURL 7.86.0 以降は非推奨となりました。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると TLS の False Start が有効になり、&false; を指定すると無効になります。
     False Start モードは、TLS クライアントがサーバーの <literal>Finished</literal> メッセージを検証する前に
     アプリケーションデータの送信を開始するモードです。
     PHP 7.0.7 以降かつ cURL 7.42.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL の動作オプションを
     <constant>CURLSSLOPT_<replaceable>*</replaceable></constant> 定数のビットマスクで指定します。
     デフォルトではどのビットも設定されていません。
     PHP 7.0.7. 以降かつ cURL 7.25.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-sessionid-cache">
   <term>
    <constant>CURLOPT_SSL_SESSIONID_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>0</literal> を指定すると SSL のセッション ID キャッシュが無効になり、
     <literal>1</literal> を指定すると有効になります。
     デフォルトでは、キャッシュを有効にした状態ですべての転送が実行されます。
     cURL 7.16.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> を指定すると、SSL のピア証明書の Common Name フィールドまたは Subject Alternate Name フィールドが
     与えられたホスト名と一致するかどうかを検証します。
     <literal>0</literal> を指定すると、名前をチェックしません。
     <literal>1</literal> は使用すべきではありません。
     本番環境では、このオプションの値は
     <literal>2</literal> (デフォルト値) のままにしておくべきです。
     値 <literal>1</literal> のサポートは cURL 7.28.1 で削除されました。
     cURL 7.8.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; を指定すると cURL が ピア証明書を検証しなくなります。
     検証に使用する代替証明書は <constant>CURLOPT_CAINFO</constant> オプションで指定するか、
     証明書ディレクトリを <constant>CURLOPT_CAPATH</constant> オプションで指定できます。
     cURL 7.10 以降のデフォルト値は &true; です。
     cURL 7.10 以降は、デフォルトの CA 証明書バンドルがインストールされています。
     cURL 7.4.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、証明書のステータスの検証が有効になります。&false; を指定すると無効になります。
     PHP 7.0.7 以降かつ cURL 7.41.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>STDERR</constant> の代わりにエラーを出力する代替場所を
     指すファイルハンドルを <type>resource</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     ストリームの重み (<literal>1</literal> から <literal>256</literal> の間の数値) を数値で設定します。
     PHP 7.0.7 以降かつ cURL 7.46.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、<constant>CURLOPT_HTTPPROXYTUNNEL</constant> が使われて CONNECT リクエストが生成された場合に、
     ユーザーコールバック関数 <constant>CURLOPT_HEADERFUNCTION</constant> および <constant>CURLOPT_WRITEFUNCTION</constant> へ
     プロキシ CONNECT レスポンスヘッダを渡さなくなります。
     デフォルト値は &false; です。
     PHP 7.3.0 以降かつ cURL 7.54.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると TCP Fast Open を有効にし、&false; を指定すると無効にします。
     PHP 7.0.7 以降かつ cURL 7.49.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると TCP のキープアライブプローブが送信されます。
     送られるプローブの遅延と頻度は、オペレーティングシステムがサポートしていれば
     <constant>CURLOPT_TCP_KEEPIDLE</constant> オプションと <constant>CURLOPT_TCP_KEEPINTVL</constant> オプションで制御できます。
     <literal>0</literal> (デフォルト) を指定すると キープアライブプローブが無効になります。
     プローブの最大数は <constant>CURLOPT_TCP_KEEPCNT</constant> オプションで設定できます。
     cURL 7.25.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続がアイドル状態のとき、オペレーティングシステムがキープアライブプローブを送信する前に待機する遅延を秒単位で設定します。
     <constant>CURLOPT_TCP_KEEPALIVE</constant> が有効でなければ効果はありません。
     なお、すべてのオペレーティングシステムがこのオプションをサポートしているわけではありません。
     デフォルトは <literal>60</literal> です。
     cURL 7.25.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     オペレーティングシステムがキープアライブプローブを送信する間隔を秒単位で設定します。
     <constant>CURLOPT_TCP_KEEPALIVE</constant> が有効でなければ効果はありません。
     なお、すべてのオペレーティングシステムがこのオプションをサポートしているわけではありません。
     デフォルトは <literal>60</literal> です。
     cURL 7.25.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepcnt">
   <term>
    <constant>CURLOPT_TCP_KEEPCNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     TCP におけるキープアライブプローブの最大送信数を指定します。
     デフォルトは <literal>9</literal> です。
     PHP 8.4.0 以降かつ cURL 8.9.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、TCP の Nagle アルゴリズム
     (ネットワーク上の小さなパケットの数を最小化しようとするアルゴリズム) を無効にします。
     デフォルト値は &true; です。
     cURL 7.11.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-telnetoptions">
   <term>
    <constant>CURLOPT_TELNETOPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     telnet ネゴシエーションに渡す <type>string</type> の <type>array</type> を指定します。
     変数は <literal>&gt;option=value&lt;</literal> 形式である必要があります。
     cURLは、<literal>TTYPE</literal>、
     <literal>XDISPLOC</literal>、<literal>NEW_ENV</literal> をサポートしています。
     cURL 7.7.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-blksize">
   <term>
    <constant>CURLOPT_TFTP_BLKSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     TFTP データ転送に使用するブロックサイズを指定します。
     有効な値の範囲は <literal>8</literal> から <literal>65464</literal> バイトです。
     このオプションが指定されていない場合、デフォルトの <literal>512</literal> バイトが使用されます。
     指定されたブロックサイズは、リモートサーバーがサポートしている場合に限り使用されます。
     サーバーがオプション確認を返さない場合や、
     ブロックサイズなしでオプション確認を返してきた場合、
     デフォルトの <literal>512</literal> バイトが使われます。
     cURL 7.19.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、TFTP でオプションリクエストを送信しないようになります。
     デフォルト値は &false; です。
     PHP 7.0.7 以降かつ cURL 7.48.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_TIMEVALUE</constant> の扱い方を設定します。
     <constant>CURL_TIMECOND_IFMODSINCE</constant> を指定すると、
     <constant>CURLOPT_TIMEVALUE</constant> で指定された時刻以降にページが変更された場合に限り
     そのページを返します。ページが変更されていない場合、
     <literal>304 Not Modified</literal> ヘッダーが返されます
     (レスポンスのヘッダー部を確認するには <constant>CURLOPT_HEADER</constant> を &true; に設定しておく必要があります)。
     <constant>CURL_TIMECOND_IFUNMODSINCE</constant> を使うとその逆の動作になります。
     <constant>CURLOPT_TIMEVALUE</constant> を無視して常にページを返すには
     <constant>CURL_TIMECOND_NONE</constant> を使用します。
     デフォルトは <constant>CURL_TIMECOND_NONE</constant> です。
     cURL 7.46.0 以前のデフォルトは
     <constant>CURL_TIMECOND_IFMODSINCE</constant> でした。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL 関数の実行を許容する最大秒数を指定します。
     デフォルトは <literal>0</literal> で、転送中に関数がタイムアウトしないことを意味します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL 関数の実行を許容する最大ミリ秒数を指定します。
     cURL がシステム標準のネームリゾルバを使うようにビルドされている場合、
     接続のその部分のタイムアウトは秒精度となり、
     指定できる最小のタイムアウトも 1 秒になります。
     デフォルトは <literal>0</literal> で、転送中に関数がタイムアウトしないことを意味します。
     cURL 7.16.2 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     1970 年 1 月 1 日からの秒数で表した時刻を指定します。この時刻は
     <constant>CURLOPT_TIMECONDITION</constant> で使われます。
     デフォルト値は <literal>0</literal> です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     1970 年 1 月 1 日からの秒数で表した時刻を指定します。この時刻は
     <constant>CURLOPT_TIMECONDITION</constant> で使われます。デフォルトは 0 です。
     このオプションと <constant>CURLOPT_TIMEVALUE</constant> の違いは引数の型です。
     'long' が 32 ビット幅しかないシステムでは、
     2038 年を超える日付を設定するのにこちらのオプションを使う必要があります。
     PHP 7.3.0 以降かつ cURL 7.59.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     TLS 1.3 接続で用いる暗号を、コロン区切りの <type>string</type> で指定します。
     このオプションは現在、cURL が OpenSSL 1.1.1 以降を使用してビルドされた場合にのみ使用されます。
     その他の SSL バックエンドを使用する場合、TLS 1.3 の暗号スイートは
     <constant>CURLOPT_SSL_CIPHER_LIST</constant> オプションで設定できます。
     PHP 7.3.0 以降かつ cURL 7.61.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-password">
   <term>
    <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_TLSAUTH_TYPE</constant> オプションで指定された
     TLS の認証方法で用いるパスワードを <type>string</type> で指定します。
     <constant>CURLOPT_TLSAUTH_USERNAME</constant> オプションも
     合わせて設定する必要があります。
     この機能は TLS SRP に依存しており、TLS 1.3 では動作しません。
     cURL 7.21.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-type">
   <term>
    <constant>CURLOPT_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     TLS の認証方法を <type>string</type> で指定します。
     サポートされているのは <literal>SRP</literal> (TLS Secure Remote Password 認証) です。
     cURL 7.21.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-username">
   <term>
    <constant>CURLOPT_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURLOPT_TLSAUTH_TYPE</constant> オプションで指定された
     TLS の認証方法で用いるユーザー名を <type>string</type> で指定します。
     <constant>CURLOPT_TLSAUTH_PASSWORD</constant> オプションも
     合わせて設定する必要があります。
     この機能は TLS SRP に依存しており、TLS 1.3 では動作しません。
     cURL 7.21.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfer-encoding">
   <term>
    <constant>CURLOPT_TRANSFER_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、送信される HTTP リクエストで圧縮形式の <literal>Transfer Encoding</literal> を
     要求するようになります。
     <literal>0</literal> を指定すると無効になります。
     サーバーが圧縮形式の <literal>Transfer Encoding</literal> で応答したなら、
     cURL は受信時に自動で展開します。
     デフォルト値は <literal>0</literal> です。
     cURL 7.21.6 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると FTP 転送で ASCII モードを使用します。
     LDAP では、HTML の代わりにプレーンテキストでデータを取得します。
     Windows システムでは、<constant>STDOUT</constant> をバイナリモードに設定しないようになります。
     デフォルト値は &false; です。
     cURL 7.1.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     接続エンドポイントとして Unix ドメインソケットの使用を有効にし、
     指定された <type>string</type> をそのパスとして設定します。
     &null; を設定すると無効になります。
     デフォルト値は &null; です。
     PHP 7.0.7 以降かつ cURL 7.40.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、(<constant>CURLOPT_FOLLOWLOCATION</constant> を使って) ロケーションを追跡する際に、
     ホスト名が変更されたとしてもユーザー名とパスワードを送り続けます。
     デフォルト値は &false; です。
     cURL 7.10.4 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     一部のプロトコルには「接続保持」メカニズムがあります。これらのメカニズムは通常、
     接続を保持するために既存の接続へ何らかのトラフィックを送信します。このオプションは接続保持間隔を設定します。
     現在、接続保持メカニズムを持つ唯一のプロトコルは HTTP/2 です。
     接続保持間隔を超えると、既存の接続へ HTTP/2 PING フレームが送信されます。
     デフォルトは <constant>CURL_UPKEEP_INTERVAL_DEFAULT</constant> で、
     現在は <literal>60</literal> 秒です。
     PHP 8.2.0 以降かつ cURL 7.62.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定するとアップロードの準備と実行を行います。
     デフォルト値は &false; です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     cURL のアップロードバッファのサイズをバイト単位で指定します。
     バッファサイズのデフォルトは 64 キロバイトです。設定可能な最大バッファサイズは 2 メガバイトです。
     設定可能な最小バッファサイズは 16 キロバイトです。
     PHP 8.2.0 以降かつ cURL 7.62.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     取得する URL を指定します。この設定は <function>curl_init</function> で
     セッションを初期化する際にも指定できます。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-use-ssl">
   <term>
    <constant>CURLOPT_USE_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     FTP、SMTP、POP3、IMAP などを使用する際の
     転送における SSL/TLS の要求レベルを設定します。
     これらのプロトコルはすべて平文で開始し、
     STARTTLS コマンドを使用して SSL に「アップグレード」されます。
     <constant>CURLUSESSL_<replaceable>*</replaceable></constant> 定数のいずれかを設定します。
     cURL 7.17.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP リクエストで使われる <literal>User-Agent: </literal> ヘッダーの内容を指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     認証に用いるユーザー名を指定します。
     cURL 7.19.1 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>[username]:[password]</literal> の形で
     接続に用いるユーザー名とパスワードを指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; を指定すると、詳細な情報を出力します。
     出力は <constant>STDERR</constant> か、
     <constant>CURLOPT_STDERR</constant> で指定されたファイルへと書き込まれます。
     デフォルト値は &false; です。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-wildcardmatch">
   <term>
    <constant>CURLOPT_WILDCARDMATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>1</literal> を指定すると、ファイル名パターンによって複数のファイルを転送します。
     パターンは <constant>CURLOPT_URL</constant> オプションの一部として指定でき、
     URL の最後の部分 (ファイル名) で
     fnmatch 風のパターン (シェルパターンマッチング) を使用します。
     cURL 7.21.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         書き込むべきデータ。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     このコールバックは、データを保存して書き込んだバイト数を返さなければなりません。
     そうしないなら、転送はエラーで中止されます (訳注: 一度にすべてのデータを書き込む必要があり、部分的な書き込みはできません。つまり、返り値は渡されたデータ長と一致しなければなりません)。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     転送のヘッダー部が書き込まれるファイルへのファイルハンドルを <type>resource</type> で指定します。
     cURL 7.1.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     WebSocket の動作オプションを設定するビットマスクを指定します。
     利用可能な唯一の選択肢は <constant>CURLWS_RAW_MODE</constant> です。
     デフォルト値は <literal>0</literal> です。
     PHP 8.3.0 以降かつ cURL 7.86.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャの <type>callable</type> を指定します。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         この転送でダウンロードされようとしている総バイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         これまでにダウンロードされたバイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         この転送でアップロードされようとしている総バイト数。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         これまでにアップロードされたバイト数。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     転送を中断し、<constant>CURLE_ABORTED_BY_CALLBACK</constant> エラーをセットするには、
     <literal>1</literal> を返してください。
     PHP 8.2.0 以降かつ cURL 7.32.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-server-response-timeout">
   <term>
    <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     サーバーからのレスポンスを cURL が待機するタイムアウト秒数を指定します。この設定が使われるのは、
     <acronym>FTP</acronym> サーバー、<acronym>SFTP</acronym> サーバー、<acronym>IMAP</acronym> サーバー、
     <acronym>SCP</acronym> サーバー、<acronym>SMTP</acronym> サーバー、<acronym>POP3</acronym> サーバーです。
     このオプションは、cURL 7.85.0 で非推奨となった
     <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant> を置き換えます。
     PHP 8.4.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     OAuth 2.0 のアクセストークンを指定します。
     &null; を指定すると無効化されます。
     デフォルト値は &null; です。
     PHP 7.0.7 以降かつ cURL 7.33.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prereqfunction">
   <term>
    <constant>CURLOPT_PREREQFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     以下のシグニチャを持つ <type>callable</type> を指定します。
     このコールバックは、接続が確立され、リクエストペイロード
     (例えば、HTTP 接続における GET/POST/DELETE リクエスト) が送られる前に呼ばれます。
     送信元/送信先 IP アドレスやポート番号に応じて接続を中止したり許可したりするのに
     用いることができます。
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>CurlHandle</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>destination_ip</parameter></methodparam>
      <methodparam><type>string</type><parameter>local_ip</parameter></methodparam>
      <methodparam><type>int</type><parameter>destination_port</parameter></methodparam>
      <methodparam><type>int</type><parameter>local_port</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>destination_ip</parameter></term>
       <listitem>
        <simpara>
         この接続で確立されたリモートサーバーのプライマリー IP アドレス。
         <acronym>FTP</acronym> の場合は、制御用接続の IP アドレスになります。
         IPv6 のアドレスは、角括弧で囲わずに表現されます。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>local_ip</parameter></term>
       <listitem>
        <simpara>
         この接続の送信元 IP アドレス。
         IPv6 のアドレスは、角括弧で囲わずに表現されます。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>destination_port</parameter></term>
       <listitem>
        <simpara>
         この接続で確立されたリモートサーバーのプライマリーポート番号。
         <acronym>FTP</acronym> の場合は、制御用接続のポート番号になります。
         プロトコルに応じて、<acronym>TCP</acronym> または <acronym>UDP</acronym> のポート番号になります。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>local_port</parameter></term>
       <listitem>
        <simpara>
         この接続の送信元ポート番号。
         プロトコルに応じて、<acronym>TCP</acronym> または <acronym>UDP</acronym> のポート番号になります。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     リクエストを許可する場合は <constant>CURL_PREREQFUNC_OK</constant> を、
     転送を中止する場合は <constant>CURL_PREREQFUNC_ABORT</constant> を返してください。
     PHP 8.4.0 以降かつ cURL 7.80.0 以降で利用可能です。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-debugfunction">
   <term>
    <constant>CURLOPT_DEBUGFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PHP 8.4.0 以降で利用可能です。
     このオプションを利用するには <constant>CURLOPT_VERBOSE</constant> オプションを有効にする必要があります。
     cURL 標準の詳細出力を置き換える <type>callable</type> を指定します。
     このコールバックは、リクエストのさまざまな段階で詳細なデバッグ情報とともに呼び出されます。
     これは以下のシグニチャである必要があります。
     <methodsynopsis>
      <type>void</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>CurlHandle</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         cURL ハンドル。
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>type</parameter></term>
       <listitem>
        <simpara>
         <parameter>data</parameter> の値の種類を表す以下の定数のいずれか：
        </simpara>
        <variablelist xml:id="constant.curl-debugfunction.constants" role="constant_list">
         <varlistentry xml:id="constant.curlinfo-text">
          <term>
           <constant>CURLINFO_TEXT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            なんらかの情報を表すテキスト。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-header-in">
          <term>
           <constant>CURLINFO_HEADER_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手から受信したヘッダー (あるいはヘッダーのような) データ。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-header-out-debug">
          <term>
           <constant linkend="constant.curlinfo-header-out-debug">CURLINFO_HEADER_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手に送信したヘッダー (あるいはヘッダーのような) データ。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-data-in">
          <term>
           <constant>CURLINFO_DATA_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手から受信した未処理のプロトコルデータ。
            データがエンコードされていたり圧縮されていたりしたとしても、デコードされたデータや展開されたデータがコールバックへ渡されることはありません。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-data-out">
          <term>
           <constant>CURLINFO_DATA_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手に送信したプロトコルデータ。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-ssl-data-in">
          <term>
           <constant>CURLINFO_SSL_DATA_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手から受信した <acronym>SSL</acronym>/<acronym>TLS</acronym> の (バイナリ) データ。
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-ssl-data-out">
          <term>
           <constant>CURLINFO_SSL_DATA_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            相手に送信した <acronym>SSL</acronym>/<acronym>TLS</acronym> の (バイナリ) データ。
           </simpara>
          </listitem>
         </varlistentry>
        </variablelist>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         <parameter>type</parameter> パラメーターで示された種類の詳細なデバッグデータ。
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
