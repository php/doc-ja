<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cb7c0c06545e7943b2de0c595c9e070b8027e0a6 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <simpara>
  以下の定数 (対応する数値またはそのシンボル名) は、
  どのエラーを報告するかを指定するビットマスクとして使用します。
  <link linkend="language.operators.bitwise">ビット演算子</link>
  を使用して、値を組み合わせたり特定のエラータイプを除外したりできます。
 </simpara>

 <tip>
  <simpara>
   &php.ini; では、対応する生の数値の代わりに定数名を使うことができます。
   ただし、&php.ini; では
   <literal>|</literal>、
   <literal>~</literal>、
   <literal>^</literal>、
   <literal>!</literal>、
   <literal>&amp;</literal>
   の演算子のみが解釈されます。
  </simpara>
 </tip>

 <warning>
  <simpara>
   PHP の外部では、シンボル名を使うことはできません。
   例えば、&httpd.conf; の中では計算済みのビットマスク値を代わりに使わなければなりません。
  </simpara>
 </warning>

 <variablelist xml:id="errorfunc.constants.errorlevels">
  <varlistentry xml:id="constant.e-error">
   <term>
    <constant>E_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     重大な実行時エラー。
     これは、メモリ確保の問題といった復帰できないエラーを表します。
     スクリプトの実行は中断されます。
    </simpara>
    <simpara>
     定数の値：<literal>1</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-warning">
   <term>
    <constant>E_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     実行時の警告 (致命的でないエラー)。
     スクリプトの実行は中断されません。
    </simpara>
    <simpara>
     定数の値：<literal>2</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-parse">
   <term>
    <constant>E_PARSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     コンパイル時のパースエラー。
     パースエラーはパーサでのみ生成されます。
    </simpara>
    <simpara>
     定数の値：<literal>4</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-notice">
   <term>
    <constant>E_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     実行時の注意。
     エラーを示しているかもしれない何かに遭遇したことを表します。
     ただし、スクリプトを問題なく実行しているときに起こることもあります。
    </simpara>
    <simpara>
     定数の値：<literal>8</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-error">
   <term>
    <constant>E_CORE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     PHP の初期始動時点で発生した致命的なエラー。
     <constant>E_ERROR</constant> に似ていますが、
     PHP のコアによって生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>16</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-warning">
   <term>
    <constant>E_CORE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     PHP の初期始動時点で発生した (致命的でない) 警告。
     <constant>E_WARNING</constant> に似ていますが、
     PHP のコアによって生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>32</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-error">
   <term>
    <constant>E_COMPILE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     コンパイル時の致命的なエラー。
     <constant>E_ERROR</constant>に似ていますが、
     Zend スクリプティングエンジンによって生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>64</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-warning">
   <term>
    <constant>E_COMPILE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     コンパイル時の (致命的でない) 警告。
     <constant>E_WARNING</constant>に似ていますが、
     Zend スクリプティングエンジンによって生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>128</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-deprecated">
   <term>
    <constant>E_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     実行時の非推奨の注意。
     これを有効にすると、将来のバージョンで
     動作しなくなるコードについての警告を受け取ることができます。
    </simpara>
    <simpara>
     定数の値：<literal>8192</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-error">
   <term>
    <constant>E_USER_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     ユーザーによって生成されるエラーメッセージ。
     <constant>E_ERROR</constant> に似ていますが、
     <function>trigger_error</function> 関数を用いて PHP コード上で
     生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>256</literal>
    </simpara>
    <warning>
     <simpara>
      この定数を <function>trigger_error</function> と使うのは
      PHP 8.4.0 で非推奨となりました。
      代わりに、<exceptionname>Exception</exceptionname> を &throw; するか、
      <function>exit</function> を呼ぶことが推奨されます。
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-warning">
   <term>
    <constant>E_USER_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     ユーザーによって生成される警告メッセージ。
     <constant>E_WARNING</constant> に似ていますが、
     <function>trigger_error</function> 関数を用いて PHP コード上で
     生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>512</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-notice">
   <term>
    <constant>E_USER_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     ユーザーによって生成される注意メッセージ。
     <constant>E_NOTICE</constant> に似ていますが、
     <function>trigger_error</function> 関数を用いて PHP コード上で
     生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>1024</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-deprecated">
   <term>
    <constant>E_USER_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     ユーザーによって生成される非推奨メッセージ。
     <constant>E_DEPRECATED</constant> に似ていますが、
     <function>trigger_error</function> 関数を用いて PHP コード上で
     生成される点が異なります。
    </simpara>
    <simpara>
     定数の値：<literal>16384</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-strict">
   <term>
    <constant>E_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     PHP が実行時に発行する提案。
     コードの前方互換性を担保するために、実行中のコードについて改善が提案されます。
    </simpara>
    <simpara>
     定数の値：<literal>2048</literal>
    </simpara>
    <warning>
     <simpara>
      このエラーレベルは使われておらず、
      PHP 8.4.0 で非推奨となりました。
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-recoverable-error">
   <term>
    <constant>E_RECOVERABLE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     キャッチできる致命的なエラーに相当する従来のエンジン「例外」(訳注: この文脈での括弧付きの「例外」は、<exceptionname>Error</exceptionname> が登場するより前に用いられていた例外の「ような」仕組みを指したものです)。
     <exceptionname>Error</exceptionname> に似ていますが、
     ユーザー定義のエラーハンドラー (<function>set_error_handler</function> を参照のこと) によってキャッチしなければなりません。
     キャッチされなかった場合、<constant>E_ERROR</constant> と同様にスクリプトの実行を中断します。
    </simpara>
    <simpara>
     定数の値：<literal>4096</literal>
    </simpara>
    <note>
     <simpara>
      このエラーレベルは実質的に使われていません。
      唯一発生しうるのは、&object; を <type>bool</type> として解釈するのに失敗したときだけです。
      これは、内部的なオブジェクトでしか起こりえません。
     </simpara>
     <simpara>
      PHP 8.4.0 より前のバージョンにおける最もよくある例としては、
      <classname>GMP</classname> インスタンスを条件式で使ったときです。
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-all">
   <term>
    <constant>E_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     すべてのエラー、警告、注意を含んだビットマスク。
    </simpara>
    <simpara>
     定数の値：<literal>32767</literal>
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
