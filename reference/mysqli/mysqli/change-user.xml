<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ee14f82484f6289278255f798f1e8b93cdc2cab5 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,mumumu -->
<refentry xml:id="mysqli.change-user" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::change_user</refname>
  <refname>mysqli_change_user</refname>
  <refpurpose>データベース接続のユーザー名を変更する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli::change_user</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>database</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_change_user</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>database</parameter></methodparam>
  </methodsynopsis>
  <para>
   指定された認証情報を使って、指定されたデータベースに接続しようと試みます。
  </para>
  <para>
   このメソッドは新しい接続が確立できなかった場合に、現在の接続を切断しません。
   その点で <methodname>mysqli::connect</methodname> と異なります。
  </para>
  <para>
   ユーザーを正しく変更するには、<parameter>username</parameter> と
   <parameter>password</parameter> 引数を正しく渡す必要があります。
   またそのユーザーが対象のデータベースに対する適切なパーミッションを
   持っている必要があります。どんな理由であれ、認証に失敗するとカレントユーザーの
   認証が継続されます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       MySQL のユーザー名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       MySQL のパスワード。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>database</parameter></term>
     <listitem>
      <para>
       データベース名。
       &null; または空文字列を指定した場合、
       デフォルトのデータベースを指定しない状態でサーバーとの接続がオープンされます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>接続セッションをリセットする</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "test");

$mysqli->query("SET @a:=1");

$mysqli->change_user("my_user", "my_password", "world");

$result = $mysqli->query("SELECT DATABASE()");
$row = $result->fetch_row();
printf("Default database: %s\n", $row[0]);

$result = $mysqli->query("SELECT @a");
$row = $result->fetch_row();
if ($row[0] === null) {
    printf("Value of variable a is NULL\n");
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "test");

mysqli_query($link, "SET @a:=1");

mysqli_change_user($link, "my_user", "my_password", "world");

$result = mysqli_query($link, "SELECT DATABASE()");
$row = mysqli_fetch_row($result);
printf("Default database: %s\n", $row[0]);

$result = mysqli_query($link, "SELECT @a");
$row = mysqli_fetch_row($result);
if ($row[0] === null) {
    printf("Value of variable a is NULL\n");
}
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Default database: world
Value of variable a is NULL
]]>
   </screen>
  </example>
  <example>
   <title><parameter>database</parameter> が &null; の場合、
   デフォルトのデータベースが選択されない状態で接続がオープンされる</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "test");

$mysqli->change_user("my_user", "my_password", null);

$result = $mysqli->query("SELECT DATABASE()");
$row = $result->fetch_row();
printf("Default database: %s\n", $row[0]);
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Default database:
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    このコマンドを使用すると、常に、カレントのデータベース接続は
    あたかも完全に新しいデータベース接続であるかのようになります。
    これにより、全てのアクティブなトランザクションはロールバックされ、
    一時テーブルは全てクローズされ、ロックされたテーブルはすべて
    開放されます。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_connect</function></member>
    <member><function>mysqli_select_db</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
