<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cdc9d28d334bbc08386fecf8aade66080004a9dd Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<refentry xml:id="function.define" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>define</refname>
  <refpurpose>名前を指定して定数を定義する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>define</methodname>
   <methodparam><type>string</type><parameter>constant_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   実行時に、名前を指定して定数を定義します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>constant_name</parameter></term>
     <listitem>
      <para>
       定数の名前。
      </para>
      <note>
       <para>
        予約語や無効な名前を使っていても、定数を <function>define</function> 
        できてしまいます。これらの値を取得するには、
        <function>constant</function> 関数を使うこと(だけ)しかできません。
        しかしながら、こういったことをするのは推奨されません。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       定数の値。PHP 5 では、<parameter>value</parameter> は
       スカラー値 (<type>int</type>、
       <type>float</type>、<type>string</type>、<type>bool</type> あるいは
       &null;) でなければいけません。PHP 7 では配列を使うこともできます。
      </para>
      <warning>
       <para>
        リソース型の定数を定義することもできますが、
        推奨できません。予期せぬ振る舞いをする可能性があります。
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitive</parameter></term>
     <listitem>
      <para>
       &true; を指定すると、定数は大文字小文字を区別しないようになります。
       デフォルトでは大文字小文字を区別します。つまり
       <literal>CONSTANT</literal> と <literal>Constant</literal>
       は別の値を表すわけです。
      </para>
      <warning>
       <simpara>
        大文字小文字を区別しない定数を定義するのは、 PHP 7.3.0 以降では推奨されなくなりました。
        PHP 8.0.0 以降では、&false; のみを受け入れます。
        &true; を渡すと、警告が発生します。
       </simpara>
      </warning>
      <note>
       <para>
        大文字小文字を区別しないときは、定数は小文字で格納されます。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>case_insensitive</parameter>
        に &true; を渡すと、
        <constant>E_WARNING</constant> が発生するようになりました。
        &false; を渡すことはまだ許可されています。
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        <parameter>case_insensitive</parameter> は非推奨になりました。
        8.0.0 で削除される予定です。
       </entry>
      </row>
      <row>
       <entry>7.0.0</entry>
       <entry>
        <type>array</type> が使えるようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>定数の定義</title>
    <programlisting role="php">
<![CDATA[
<?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // "Hello world." を出力します
echo Constant; // "Constant" を出力し、警告が発生します

define("GREETING", "Hello you.", true);
echo GREETING; // "Hello you." を出力します
echo Greeting; // "Hello you." を出力します

// PHP 7 以降で動作します
define('ANIMALS', array(
    'dog',
    'cat',
    'bird'
));
echo ANIMALS[1]; // "cat" を出力します

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>予約された名前を定数にする</title>
    <para>

     <link linkend="language.constants.predefined">マジック定数</link>
     と同じ名前の定数を定義できる <emphasis>可能性</emphasis> を示します。
     しかしながら、結果として起きる振る舞いは明らかに混乱を招くため、
     こんなことを実際にすることは推奨されません。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(defined('__LINE__'));
var_dump(define('__LINE__', 'test'));
var_dump(constant('__LINE__'));
var_dump(__LINE__);
?>
]]>
    </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(false)
bool(true)
string(4) "test"
int(5)
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>defined</function></member>
    <member><function>constant</function></member>
    <member><link linkend="language.constants">定数</link>の節</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
