<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d2479dcf35d82aca39ee61f8ab36ceed78a869c Maintainer: mumumu Status: ready -->
<sect1 xml:id="migration81.other-changes" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>その他の変更</title>

 <sect2 xml:id="migration81.other-changes.sapi">
  <title>SAPI モジュールへの変更</title>

  <sect3 xml:id="migration81.other-changes.sapi.cli">
   <title>CLI</title>

   <para>
    <link linkend="book.readline">readline 拡張機能</link> 
    が組み込まれていないのに、
    <option>-a</option> オプションを使った場合、
    エラーが発生するようになりました。
    以前のバージョンでは、
    readline が組み込まれていない時に <option>-a</option>
    オプションを使うと、
    <command>php</command>
    コマンドを引数なしでコールしたのと同じ振る舞いをするのに、
    <literal>"Interactive mode enabled"</literal>
    というメッセージを追加で出力していました。
    この場合のモードは、インタラクティブではありません
    <emphasis>でした</emphasis>。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.sapi.phpdbg">
   <title>PHPDBG</title>

   <para>
    <link linkend="book.phpdbg">phpdbg</link>
    のリモート関連の機能が削除されました。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.functions">
  <title>変更された関数</title>

  <sect3 xml:id="migration81.other-changes.functions.core">
   <title>PHP コア</title>

   <para>
    &foreach;、
    <function>var_dump</function>、
    <function>serialize</function>、
    オブジェクトの比較時などで用いられるプロパティの順序が変更されました。
    プロパティは宣言や継承に応じて、自然順に並ぶようになりました。
    親クラスで宣言されたプロパティは、
    子クラスのプロパティの前に並びます。
   </para>
   <para>
    この順序は、
    構造体 <code>zend_object</code> 
    内部のレイアウトと一致しており、
    <code>default_properties_table[]</code>
    と
    <code>properties_info_table[]</code>
    でも同様の順序が用いられています。
    以前のバージョンでは、
    プロパティの順序がドキュメント化されておらず、
    クラスの継承の実装の詳細に依存していました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.filter">
   <title>Filter</title>

   <para>
    <constant>FILTER_VALIDATE_INT</constant>
    フィルタの
    <constant>FILTER_FLAG_ALLOW_OCTAL</constant> 
    フラグは、
    8進数のプレフィックス
    (<literal>"0o"</literal>/<literal>"0O"</literal>)
    が先頭についた8進文字列を受け入れるようになりました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.gmp">
   <title>GMP</title>

   <para>
    全ての
    <link linkend="book.gmp">GMP</link>
    関数が、
    8進数のプレフィックス
    (<literal>"0o"</literal>/<literal>"0O"</literal>)
    が先頭についた8進文字列を受け入れるようになりました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.pdo-odbc">
   <title>PDO ODBC</title>

   <para>
    <methodname>PDO::getAttribute</methodname> に 
    <constant>PDO::ATTR_SERVER_INFO</constant> や
    <constant>PDO::ATTR_SERVER_VERSION</constant> を指定した場合でも、
    値を返すようになりました。
    以前のバージョンでは、
    <classname>PDOException</classname> をスローしていました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.reflection">
   <title>リフレクション</title>

   <para>
    <methodname>ReflectionProperty::setAccessible</methodname>
    と
    <methodname>ReflectionMethod::setAccessible</methodname>
    は、もはや意味をなさなくなりました。
    プロパティとメソッドは、
    常にリフレクション経由でアクセス可能と見なされるようになっています。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.standard">
   <title>Standard</title>

   <para>
    <function>syslog</function> 関数は、バイナリセーフになりました。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.extensions">
  <title>拡張機能へのその他の変更</title>

  <sect3 xml:id="migration81.other-changes.extensions.gd">
   <title>GD</title>

   <para>
    <function>imagewebp</function>
    関数の quality 引数に
    <constant>IMG_WEBP_LOSSLESS</constant>
    を指定することで、
    ロスレスエンコードが行えるようになりました。
   </para>
   <para>
    システムが使っている libgd が
    WebP のロスレスエンコーディングをサポートしている場合にのみ、
    この定数は定義されます。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.mysqli">
   <title>MySQLi</title>

   <para>
    libmysqlclient とリンクした場合に、
    <methodname>mysqli_stmt::next_result</methodname>
    と
    <methodname>mysqli::fetch_all</methodname> が使えるようになりました。
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.openssl">
   <title>OpenSSL</title>

   <itemizedlist>
    <listitem>
     <para>
      <link linkend="book.openssl">OpenSSL 拡張機能</link>
      は、OpenSSL 1.0.2 以降が必須になりました。
     </para>
    </listitem>
    <listitem>
     <para>
      OpenSSL 3.0 がサポートされるようになりました。
      多くの暗号が(レガシーなプロバイダの一部となっているため)
      デフォルトで有効ではなくなり、
      引数の検証 (たとえば鍵の最小サイズ) が厳しくなっています。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.phar">
   <title>Phar</title>

   <itemizedlist>
    <listitem>
     <para>
      SHA256 が、シグネチャのデフォルトとして使われるようになりました。
     </para>
    </listitem>
    <listitem>
     <para>
      OpenSSL_SHA256 と OpenSSL_SHA512
      シグネチャのサポートが追加されました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.snmp">
   <title>SNMP</title>

   <itemizedlist>
    <listitem>
     <para>
      セキュリティプロトコルのために、
      SHA256 と SHA512 のサポートが追加されました。
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.standard">
   <title>Standard</title>

   <para>
    configure オプション
    <code>--with-password-argon2</code> は、
    libargon2 を検知するのに pkg-config を使うようになっています。
    そのため、libargon2 のインストール先を指定するには、
    <envar>PKG_CONFIG_PATH</envar> を使うべきです。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.ini">
  <title>INI ファイルの扱いの変更</title>

  <itemizedlist>
   <listitem>
    <para>
     INI ディレクティブ
     <link linkend="ini.log-errors-max-len">log_errors_max_len</link>
     は削除されました。
     PHP 8.0.0 以降、この設定は意味をなさなくなっていました。
    </para>
   </listitem>
   <listitem>
    <para>
     クォートされた文字列の先頭にドル記号がある場合、
     そのドル記号はエスケープされるようになりました。
     つまり、
     <literal>"\${"</literal>
     は、
     <literal>${</literal> という文字列として解釈されます。
    </para>
   </listitem>
   <listitem>
    <para>
     ダブルクォートで囲まれた文字列中のバックスラッシュは、
     エスケープ文字としてより一貫した形で扱われるようになりました。
     以前のバージョンでは、
     <literal>"foo\\"</literal> の後に改行文字以外の文字が続いた場合、
     文字列の終端とは見なされませんでした。
     PHP 8.1.0 以降では、<literal>foo\</literal>
     という文字列として解釈されるようになります。
     例外として、<literal>"foo\"</literal> の後に改行文字が続いた場合は、
     <literal>foo\</literal> という文字列として解釈されます。
     文字列が終端していないとは見なされません。
     但し、<literal>"C:\foo\"</literal> のような、
     Windows のファイルパスを使う場合には例外が存在します。
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
