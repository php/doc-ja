<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 781f2ec04ee8817687e5e333bc3e64ab973322d7 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="function.fgetcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>ファイルポインタから行を取得し、CSVフィールドを処理する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>fgets</function> に動作は似ていますが、
   <function>fgetcsv</function> は行を <acronym>CSV</acronym>
   フォーマットのフィールドとして読込み処理を行い、
   読み込んだフィールドを含む配列を返すという違いがあります。
  </para>
  <note>
   <simpara>
    この関数はロケール設定を考慮します。
    例えば、<constant>LC_CTYPE</constant> が <literal>en_US.UTF-8</literal> の場合、
    1 バイトエンコーディングでエンコードされたデータが
    間違って処理されるかもしれません。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       ファイルポインタは有効なものでなければならず、また
       <function>fopen</function>,
       <function>popen</function>, もしくは <function>fsockopen</function>
       で正常にオープンされたファイルを指している必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       (行末文字を考慮して) CSV
       ファイルにある最も長い行よりも大きい必要があります。
       そうでない場合は、ひとつの行が <parameter>length</parameter>
       文字ずつのチャンクに分割されてしまいます。
       ただし、フィールド囲いこみ文字の内部では、この分割は発生しません。
      </para>
      <para>
       このパラメータを省略 (もしくは 0 を設定、
       PHP 8.0.0 以降では &null; を設定) すると、
       最大行長は制限されません。この場合、若干動作が遅くなります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       <parameter>separator</parameter> パラメータで、フィールドのデリミタを設定します。
       シングルバイト文字 1 文字のみでなければなりません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       オプションの <parameter>enclosure</parameter> パラメータで、フィールド囲いこみ文字を設定します。
       シングルバイト文字 1 文字のみでなければなりません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       オプションの <parameter>escape</parameter> パラメータで、エスケープ文字を設定します。
       シングルバイト文字 1 文字のみ、または空文字列でなければなりません。
       空文字列(<literal>""</literal>) を指定すると、(RFC 4180 に準拠していない) 独自仕様のエスケープ機構が無効になります。
      </para>
      <note>
       <simpara>
        <parameter>enclosure</parameter> の文字は、フィールド内で2回出力される
        ことでエスケープされます。しかし、
        <parameter>escape</parameter> 文字はその代替として使えます。
        デフォルトのパラメータの値
        <literal>""</literal> と <literal>\"</literal> は同じ意味を持ちます。
        <parameter>enclosure</parameter> の文字を
        <parameter>escape</parameter> 文字でエスケープすることには、
        特別な意味はありません。それ自身をエスケープする意味ですらありません。
       </simpara>
      </note>
      <warning>
       <simpara>
        PHP 8.4.0 以降では、<parameter>escape</parameter>
        のデフォルト値に依存することは非推奨となりました。
        位置指定の引数か、<link linkend="functions.named-arguments">名前付き引数</link>
        を使用して明示的に指定する必要があります。
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &warning.csv.escape-parameter;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   読み込んだフィールドの内容を含む数値添字配列を返します。
   &return.falseforfailure;
  </para>
  <note>
   <para>
    CSV ファイルの空行は <type>null</type>
    フィールドを一つだけ含む配列として返され、
    エラーにはなりません。
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   <parameter>separator</parameter> または <parameter>enclosure</parameter> が
   1 バイト長ではない場合、<exceptionname>ValueError</exceptionname> をスローします。
  </simpara>
  <simpara>
   <parameter>escape</parameter> が 1 バイト長、または空文字列ではない場合、
   <exceptionname>ValueError</exceptionname> をスローします。
  </simpara>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>
        <parameter>escape</parameter> のデフォルト値に依存することは、
        非推奨になりました。
       </entry>
      </row>
      <row>
       <entry>8.3.0</entry>
       <entry>
        最後のフィールドが、
        閉じられていないフィールド囲いこみ文字だけの場合、
        null バイト 1 つの文字列ではなく、空文字列を返すようになりました。
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> は、nullable になりました。
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        <parameter>escape</parameter> パラメータが空文字列を受け入れるようになりました。
        この場合、(RFC 4180 に準拠していない) 独自仕様のエスケープ機構が無効になります。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
  &warning.csv.escape-parameter;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>CSV ファイルの全てのコンテンツを読み込み、表示する</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num fields in line $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>fputcsv</function></member>
   <member><function>str_getcsv</function></member>
   <member><methodname>SplFileObject::fgetcsv</methodname></member>
   <member><methodname>SplFileObject::fputcsv</methodname></member>
   <member><methodname>SplFileObject::setCsvControl</methodname></member>
   <member><methodname>SplFileObject::getCsvControl</methodname></member>
   <member><function>explode</function></member>
   <member><function>file</function></member>
   <member><function>pack</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
