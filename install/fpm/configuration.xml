<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 0a2cede24d8931daf458935665d0cac08d0926c5 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->

  <sect1 xml:id="install.fpm.configuration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>設定</title>
   <para>
    FPM では、&php.ini; 形式の構文の設定ファイル <filename>php-fpm.conf</filename> と、プール設定ファイルを使います。
   </para>
   <sect2> 
    <title><filename>php-fpm.conf</filename> のグローバル設定項目</title>
    <variablelist>
     <varlistentry xml:id="pid">
      <term>
       <parameter>pid</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        PID ファイルへのパス。デフォルト値: なし
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="error-log">
      <term>
       <parameter>error_log</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        エラーログファイルへのパス。デフォルト値:
        <literal>#INSTALL_PREFIX#/log/php-fpm.log</literal>
        "syslog" と設定すると、ログをローカルファイルに書き出すのではなく、syslogd に送信します。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="log-level">
      <term>
       <parameter>log_level</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        エラーログのレベル。使用可能な値: alert, error, warning, notice,
        debug、デフォルト値: notice
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="log-limit">
      <term>
       <parameter>log_limit</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        1024文字以上のログメッセージを、
        改行せずにロギングできる文字数の上限。
        デフォルト値: 1024
        PHP 7.3.0 以降で利用可能
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="log-buffering">
      <term>
       <parameter>log_buffering</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        追加のバッファリングを行わずに実験的なロギングを行う
        デフォルト値: yes
        PHP 7.3.0 以降で利用可能
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="syslog-facility">
      <term>
       <parameter>syslog.facility</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        メッセージを記録するプログラムの種別。
        デフォルト値: daemon
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="syslog-ident">
      <term>
       <parameter>syslog.ident</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        すべてのメッセージの先頭に付加する内容。
        複数の FPM インスタンスを同一サーバー上で実行する場合には、
        デフォルト値を変更すれば区別できるようになります。
        デフォルト値: php-fpm
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="emergency-restart-threshold">
      <term>
       <parameter>emergency_restart_threshold</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        <literal>emergency_restart_interval</literal> で設定された間隔で
        この数以上の子プロセスが SIGSEGV あるいは SIGBUS で終了した場合に
        FPM は再起動します。0 は 'オフ' を意味します。デフォルト値: 0 (オフ)
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="emergency-restart-interval">
      <term>
       <parameter>emergency_restart_interval</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        emergency_restart_interval が緩やかな再起動をいつ実行するかを決めるときに使う間隔。
        これは、アクセラレータの共有メモリが壊れてしまったときの回避策として有用です。
        使用可能な単位: s(秒), m(分), h(時間) あるいは d(日)、
        デフォルトの単位: 秒、デフォルト値: 0 (オフ)
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-control-timeout">
      <term>
       <parameter>process_control_timeout</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        子プロセスが、マスタからのシグナルの反応を待つ最大時間。
        使用可能な単位: s(秒), m(分), h(時間) あるいは d(日)、
        デフォルトの単位: 秒、デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-max">
      <term>
       <parameter>process.max</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        FPM がフォークするプロセスの最大数。
        多数のプール内で動的な PM を使う場合に、全体のプロセス数を制御するために用意されたものです。
        気をつけて使うようにしましょう。
        デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-priority">
      <term>
       <parameter>process.priority</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        マスタープロセスに適用する nice(2) 値。
        -19 (優先度最高) から 20 (優先度最低) までの値を指定します。
        デフォルト値: 未設定
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="daemonize">
      <term>
       <parameter>daemonize</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        FPM をバックグラウンドに送る。'no' にすると
        デバッグ用に FPM をフォアグラウンドに置き続けます。
        デフォルト値: yes
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="rlimit-files-master">
      <term>
       <parameter>rlimit_files</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        マスタープロセス用の、オープン時のファイル記述子の rlimit。
        デフォルト値: システムで定義されている値
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="rlimit-core-master">
      <term>
       <parameter>rlimit_core</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        マスタープロセス用の、最大コアサイズの rlimit。
        デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="events-mechanism">
      <term>
       <parameter>events.mechanism</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FPM が利用するイベントメカニズム。
        select、pool、epoll、kqueue (*BSD)、port (Solaris) が利用可能。
        デフォルト値: 未設定 (自動検出)
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="systemd-interval">
      <term>
       <parameter>systemd_interval</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        FPM を systemd 統合込みでビルドした場合に、
        ヘルスチェックのレポートを systemd に送る間隔 (秒単位)。
        0 にすると、無効化されます。
        デフォルト値: 10
       </para> 
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2> 
    <title>プール一覧の項目</title>
    <para>
     FPM を使うと、複数のプロセスプールをそれぞれ別の設定で実行することができます。
     プール単位での設定を行う項目を以下に示します。
    </para>
    <variablelist>
     <varlistentry xml:id="listen">
      <term>
       <parameter>listen</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FastCGI リクエストを受け入れるアドレス。
        'ip.add.re.ss:port', 'port', '/path/to/unix/socket' 形式の構文が使えます。
        このオプションは、各プール単位で必須となります。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-backlog">
      <term>
       <parameter>listen.backlog</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        listen(2) のバックログを設定します。
        <literal>-1</literal> はBSD 系のシステムでは最大値を意味します。
        デフォルト値: <literal>-1</literal> (FreeBSD や OpenBSD)
        または <literal>511</literal> (Linux やその他のプラットフォーム)
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-allowed-clients">
      <term>
       <parameter>listen.allowed_clients</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        接続を許可されている FastCGI クライアントの IPv4 または IPv6 アドレス一覧。オリジナル版 PHP FastCGI (5.2.2+)
        における環境変数 FCGI_WEB_SERVER_ADDRS と同じです。
        tcp でリスンするソケットに対してのみ意味をなします。
        書くアドレスはカンマ区切りで指定します。この値を空にしておくと、任意の ip アドレスからの接続を許可します。
        デフォルト値: 任意の ip アドレスを許可。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-owner">
      <term>
       <parameter>listen.owner</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        unix ソケットを使う場合に、そのパーミッションを設定します。Linux では、
        読み書きアクセス権限を設定しないとウェブサーバーからの接続を受け付けることができません。
        多くの BSD 由来のシステムでは、パーミッションにかかわらず接続を受け付けることができます。
        デフォルト値: ユーザーとグループは実行しているユーザーと同じ、モードは 0660
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-group">
      <term>
       <parameter>listen.group</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <literal>listen.owner</literal> を参照ください。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-mode">
      <term>
       <parameter>listen.mode</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <literal>listen.owner</literal> を参照ください。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-acl-users">
      <term>
       <parameter>listen.acl_users</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        POSIX の Access Control List をサポートしている場合は、このオプションでそれを指定できます。
        これを設定した場合は、<literal>listen.owner</literal> および <literal>listen.group</literal> は無視されます。
        値には、ユーザー名をカンマ区切りのリスト形式で指定します。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="listen-acl-groups">
      <term>
       <parameter>listen.acl_groups</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <literal>listen.acl_users</literal> を参照。
        グループ名を、カンマ区切りのリスト形式で指定します。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="user">
      <term>
       <parameter>user</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FPM プロセスの unix ユーザー。このオプションは必須です。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="group">
      <term>
       <parameter>group</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FPM プロセスの unix グループ。未設定の場合は、デフォルトのユーザーのグループを使います。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm">
      <term>
       <parameter>pm</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        プロセスマネージャが子プロセスの数を制御する方法を選択します。
        使用可能な値: <literal>static</literal>, <literal>ondemand</literal>, <literal>dynamic</literal>
        このオプションは必須です。
       </para>
       <para>
        <literal>static</literal> - 子プロセスの数は固定 (<literal>pm.max_children</literal>) です。
       </para>
       <para>
        <literal>ondemand</literal> - プロセスを必要に応じて立ち上げます。
        dynamic とは対照的に、リクエストされると
        <literal>pm.start_servers</literal> で指定しただけサービスを開始します。
       </para>
       <para>
        <literal>dynamic</literal> - 子プロセスの数は、
        <literal>pm.max_children</literal>、<literal>pm.start_servers</literal>、
        <literal>pm.min_spare_servers</literal>、<literal>pm.max_spare_servers</literal>
        の内容に基づいて動的に設定されます。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.max-children">
      <term>
       <parameter>pm.max_children</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        <literal>pm</literal> が <literal>static</literal> の場合は作成される子プロセスの数、
        <literal>pm</literal> が <literal>dynamic</literal> の場合は作成される子プロセスの最大数。
        このオプションは必須です。
       </para>
       <para>
        このオプションは、同時に処理できるリクエストの最大数を設定します。 
        mpm_prefork での ApacheMaxClients ディレクティブや、
        オリジナル版の PHP FastCGI における環境変数 <varname>PHP_FCGI_CHILDREN</varname>
        と同じです。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.start-servers">
      <term>
       <parameter>pm.start_servers</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        起動時に作成される子プロセスの数。<literal>pm</literal> が <literal>dynamic</literal>
        の場合にのみ使います。デフォルト値: min_spare_servers + (max_spare_servers -
        min_spare_servers) / 2
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.min-spare-servers">
      <term>
       <parameter>pm.min_spare_servers</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        アイドル状態のサーバープロセス数の最小値。
        <literal>pm</literal> が <literal>dynamic</literal> の場合にのみ使います。
        また、この場合には必須となります。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.max-spare-servers">
      <term>
       <parameter>pm.max_spare_servers</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        アイドル状態のサーバープロセス数の最大値。
        <literal>pm</literal> が <literal>dynamic</literal> の場合にのみ使います。
        また、この場合には必須となります。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.max-spawn-rate">
      <term>
       <parameter>pm.max_spawn_rate</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        一度に子プロセスを生成する数。
        <literal>pm</literal> の値が
        <literal>dynamic</literal> である場合にのみ使えます。
        デフォルト値: 32
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.process-idle-timeout">
      <term>
       <parameter>pm.process_idle_timeout</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        アイドルなプロセスがkillされた後の秒数。
        <literal>pm</literal> の値が
        使用可能な単位: s(秒)(デフォルト)、m(分)、h(時間)、または d(日)。
        デフォルト値: 10 秒
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.max-requests">
      <term>
       <parameter>pm.max_requests</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        各子プロセスが、再起動するまでに実行するリクエスト数。
        サードパーティのライブラリにおけるメモリリークの回避策として便利です。
        再起動せずにずっとリクエストを処理させる場合は '0' を指定します。
        <varname>PHP_FCGI_MAX_REQUESTS</varname> と同じです。デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.status-listen">
      <term>
       <parameter>pm.status_listen</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FastCGI の statusリクエスト を受け付けるアドレス。
        これを設定すると、独自にリクエストを処理する新しい、
        外からは見えないプールが作られます。
        これは、長時間実行されるリクエストによって
        メインプールがビジーである場合に役立ちます。
        なぜなら、そうした処理に長時間かかるリクエストが終わる前であっても、
        <link linkend="fpm.status">FPM の情報ページ</link>
        を見ることが出来るからです。
        <link linkend="listen">listen</link>
        ディレクティブと設定できる内容は同じです。
        デフォルト値: 未設定。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="pm.status-path">
      <term>
       <parameter>pm.status_path</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        <link linkend="fpm.status">FPM の情報ページ</link>
        を見るための URI。この値は、スラッシュ (/) で始めなければいけません。
        この値を省略した場合は、どの URI も情報ページとは見なされません。
        デフォルト値: なし
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ping.path">
      <term>
       <parameter>ping.path</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FPM のモニタリングページをコールするための ping URI。この値を省略した場合は、どの URI
        も ping ページとは見なされません。これを使うと、
        FPM が生きていて応答するかどうかを外部から確かめることができます。
        この値の最初はスラッシュ (/) で始めなければならないことに注意しましょう。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ping.response">
      <term>
       <parameter>ping.response</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        このディレクティブを使うと、ping リクエストに対するレスポンスをカスタマイズすることができます。
        このレスポンスは text/plain 形式となり、レスポンスコード 200 で返されます。
        デフォルト値: pong
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="worker-process-priority">
      <term>
       <parameter>process.priority</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        ワーカープロセスに適用される、
        nice(2) の値の優先度を指定します。
        (指定された場合のみ有効)
        この値は、-19(優先度最高) から、20(優先度最低) まで変わります。
        デフォルト値: 未設定
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="process-dumpable">
      <term>
       <parameter>process.dumpable</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        プロセスのユーザーやグループが、
        masterプロセスのユーザーと異なっていた場合でも、
        プロセスのダンプ可能フラグ(PR_SET_DUMPABLE prctl)を設定します。
        これにより、プロセスのコアダンプを生成できるようになり、
        pool のユーザーがプロセスを ptrace 出来るようになります。
        デフォルト値: no
        PHP 7.0.29, 7.1.17 および 7.2.5 から利用可能
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="prefix">
      <term>
       <parameter>prefix</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        path を評価する際に、
        path の前につける prefix を指定します。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="request-terminate-timeout">
      <term>
       <parameter>request_terminate_timeout</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        単一のリクエストを処理する際のタイムアウト。この時間を過ぎるとワーカープロセスが kill されます。
        このオプションは、'max_execution_time' ini オプションが何らかの理由でスクリプトの実行を止められなかった場合に使われます。
        値 '0' は 'Off' を意味します。 
        使用可能な単位: s(秒)(デフォルト), m(分), h(時間) あるいは d(日)、
        デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="request-terminate-timeout-track-finished">
      <term>
       <parameter>request_terminate_timeout_track_finished</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        <link linkend="function.fastcgi-finish-request">fastcgi_finish_request</link> がコールされた後や、
        アプリケーションが終了し、
        内部的なシャットダウン関数がコールされているときには適用されない
        <link linkend="request-terminate-timeout">request_terminate_timeout</link> を有効にするかどうか。
        このディレクティブを有効にすると、
        そのような適用されないケースでもタイムアウトを無条件に有効にします。
        デフォルト値: no。PHP 7.3.0 以降で利用可能。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="request-slowlog-timeout">
      <term>
       <parameter>request_slowlog_timeout</parameter>
       <type>mixed</type>
      </term>
      <listitem>
       <para>
        単一のリクエストを処理する際のタイムアウト。この時間を過ぎると
        PHP のバックトレースが 'slowlog' ファイルに出力されます。 
        値 '0' は 'Off' を意味します。 
        使用可能な単位: s(秒)(デフォルト), m(分), h(時間) あるいは d(日)、
        デフォルト値: 0
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="request-slowlog-trace-depth">
      <term>
       <parameter>request_slowlog_trace_depth</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        slowlog に吐き出されるログのスタックトレースの深さ。
        デフォルト値: 20。PHP 7.2.0 以降で利用可能。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="slowlog">
      <term>
       <parameter>slowlog</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        遅いリクエストを記録するログファイル。デフォルト値:
        <literal>#INSTALL_PREFIX#/log/php-fpm.log.slow</literal>
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="rlimit-files">
      <term>
       <parameter>rlimit_files</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        このプール内の子プロセス用の、オープン時のファイル記述子の rlimit。デフォルト値: システムで定義されている値
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="rlimit-core">
      <term>
       <parameter>rlimit_core</parameter>
       <type>int</type>
      </term>
      <listitem>
       <para>
        このプール内の子プロセス用の、最大コアサイズの rlimit。
        使用可能な値: 'unlimited' あるいは 0 以上の整数値、
        デフォルト値: システムで定義されている値
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="chroot">
      <term>
       <parameter>chroot</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        このディレクトリに chroot して開始位置とします。この値は絶対パスで指定しなければなりません。
        この値を省略した場合は、chroot を使いません。
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="chdir">
      <term>
       <parameter>chdir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        このディレクトリに chdir して開始位置とします。この値は絶対パスで指定しなければなりません。
        デフォルト値: カレントディレクトリ、あるいは chroot した場合は /
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="catch-workers-output">
      <term>
       <parameter>catch_workers_output</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        ワーカーの標準出力および標準エラー出力を本体のエラーログにリダイレクトします。
        省略した場合は、FastCGI の仕様にしたがって標準出力および標準エラー出力を
        /dev/null にリダイレクトします。
        デフォルト値: no
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="decorate-workers-output">
      <term>
       <parameter>decorate_workers_output</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        <link
        linkend="catch-workers-output">catch_workers_output</link> 
        が有効になった場合に、
        ワーカーの出力のデコレートを有効にします。
        デフォルト値: yes
        PHP 7.3.0 以降で利用可能。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="clear-env">
      <term>
       <parameter>clear_env</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        FPM ワーカー内の環境をクリアする。
        任意の環境変数が FPM ワーカープロセスに到達してしまうことを防ぐために、
        ワーカー内の環境をいったんクリアしてから、このプールの設定で指定された環境変数を追加します。
        デフォルト値: Yes
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="security-limit-extensions">
      <term>
       <parameter>security.limit_extensions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        FPM がパース可能なメインスクリプトを拡張子で制限する。
        サーバー側の設定ミスによる被害を抑えることができます。
        FPM には拡張子 .php だけをパースさせるようにしておけば、
        悪意のあるユーザーがその他の拡張子で php のコードを実行させようとする試みを防ぐことができます。
        デフォルト値: .php .phar
       </para> 
      </listitem>
     </varlistentry>
     <varlistentry xml:id="apparmor-hat">
      <term>
       <parameter>apparmor_hat</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        AppArmor が有効になっている場合に、
        ハット変更を許可します。
        デフォルト値: 未設定。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="access-log">
      <term>
       <parameter>access.log</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        アクセス・ログ・ファイル。
        デフォルト値: 未設定
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="access-format">
      <term>
       <parameter>access.format</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        アクセス・ログ形式。
        デフォルト値: <literal>"%R - %u %t \"%m %r\" %s"</literal>:
        <table xml:id="fpm.configuration.access.format">
         <title>有効なオプション</title>
         <tgroup cols="2">
          <thead>
           <row>
            <entry>プレースホルダ</entry>
            <entry>説明</entry>
           </row>
          </thead>
          <tbody>
           <row>
            <entry>
             <literal>%%</literal>
            </entry>
            <entry><literal>%</literal> 文字</entry>
           </row>
           <row>
            <entry>
             <constant>%C</constant>
            </entry>
            <entry>
             リクエストが使う %CPU。
             以下のフォーマットが使えます:
             <literal>%{user}C</literal> user CPU のみ。
             <literal>%{system}C</literal> system CPU のみ。
             <literal>%{total}C</literal> user + system CPU (デフォルト)
            </entry>
           </row>
           <row>
            <entry>
             <constant>%d</constant>
            </entry>
            <entry>
             リクエストの処理に掛かる時間。
             精度について、以下のフォーマットが許可されています:
             <literal>%{seconds}d</literal> (デフォルト), <literal>%{milliseconds}d</literal>,
             <literal>%{microseconds}d</literal>.
            </entry>
           </row>
           <row>
            <entry>
             <constant>%e</constant>
            </entry>
            <entry>
             環境変数 (<varname>$_ENV</varname> や <varname>$_SERVER</varname> と同じ)。
             変数の名前は、指定する環境変数の名前を中括弧で囲んだものでなければなりません。
             たとえば、サーバーの変数として
             <literal>%{REQUEST_METHOD}e</literal> や
             <literal>%{SERVER_PROTOCOL}e</literal>、
             HTTP ヘッダの変数として
             <literal>%{HTTP_HOST}e</literal> や
             <literal>%{HTTP_USER_AGENT}e</literal> が挙げられます。
            </entry>
           </row>
           <row>
            <entry>
             <constant>%f</constant>
            </entry>
            <entry>script のファイル名</entry>
           </row>
           <row>
            <entry>
             <constant>%l</constant>
            </entry>
            <entry>
             リクエストの <literal>Content-Length</literal> (HTTP POST のみ)
            </entry>
           </row>
           <row>
            <entry>
             <constant>%m</constant>
            </entry>
            <entry>HTTP リクエストの method</entry>
           </row>
           <row>
            <entry>
             <constant>%M</constant>
            </entry>
            <entry>
             PHP によって確保されたメモリのピーク値。
             以下のフォーマットが使えます:
             <literal>%{bytes}M</literal> (デフォルト),
             <literal>%{kilobytes}M</literal>,
             <literal>%{kilo}M</literal>, <literal>%{megabytes}M</literal>,
             <literal>%{mega}M</literal>
            </entry>
           </row>
           <row>
            <entry>
             <constant>%n</constant>
            </entry>
            <entry>Pool name</entry>
           </row>
           <row>
            <entry>
             <literal>%{<replaceable>name</replaceable>}o</literal>
            </entry>
            <entry>
             出力ヘッダ。
             ヘッダ名は、中括弧で囲んで指定しなければいけません。
             例: <literal>%{Content-Type}o</literal>,
             <literal>%{X-Powered-By}o</literal>,
             <literal>%{Transfer-Encoding}o</literal>
            </entry>
           </row>
           <row>
            <entry>
             <constant>%p</constant>
            </entry>
            <entry>リクエストを処理した子プロセスの PID</entry>
           </row>
           <row>
            <entry>
             <literal>%P</literal>
            </entry>
            <entry>リクエストを処理した子の親のPID</entry>
           </row>
           <row>
            <entry>
             <constant>%q</constant>
            </entry>
            <entry>query string</entry>
           </row>
           <row>
            <entry>
             <constant>%Q</constant>
            </entry>
            <entry>
             <literal>'?'</literal> 文字、または
             クエリストリングが存在した場合、
             <literal>%q</literal> と <literal>%r</literal>,
             の間の glue
            </entry>
           </row>
           <row>
            <entry>
             <constant>%r</constant>
            </entry>
            <entry>
             クエリストリングを除いたリクエストURI。
             <literal>%q</literal> と <literal>%Q</literal>
             も参照ください。
            </entry>
           </row>
           <row>
            <entry>
             <constant>%R</constant>
            </entry>
            <entry>remote IP address</entry>
           </row>
           <row>
            <entry>
             <constant>%s</constant>
            </entry>
            <entry>Status (response code)</entry>
           </row>
           <row>
            <entry>
             <constant>%t</constant>
            </entry>
            <entry>リクエストを受け取ったサーバー側の時刻</entry>
           </row>
           <row>
            <entry>
             <constant>%T</constant>
            </entry>
            <entry>ログが書き込まれた時間(リクエストが終了した時間)</entry>
           </row>
           <row>
            <entry>
             <constant>%u</constant>
            </entry>
            <entry>Remote user</entry>
           </row>
          </tbody>
         </tgroup>
        </table>
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     追加の環境変数を渡して、特定のプールだけで PHP の設定を更新することができます。
     そのためには、次のオプションをプール設定ファイルに追加しなければなりません。
     <example>
      <title>環境変数や PHP の設定をプールに渡す</title>
      <programlisting role="ini">
<![CDATA[
env[HOSTNAME] = $HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp

php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
php_flag[display_errors] = off
php_admin_value[error_log] = /var/log/fpm-php.www.log
php_admin_flag[log_errors] = on
php_admin_value[memory_limit] = 32M
]]>
      </programlisting>
     </example>
     <literal>php_value</literal> や
     <literal>php_flag</literal> で渡した PHP の設定は、その前に設定されていた内容を上書きします。
     ただし
     <link linkend="ini.disable-functions">disable_functions</link> や
     <link linkend="ini.disable-classes">disable_classes</link> は別で、
     <filename>php.ini</filename> で定義された値を上書きするのではなく、
     新たに指定した値を追記することになります。
    </para>
    <para>
     <literal>php_admin_value</literal> や <literal>php_admin_flag</literal>
     で設定した値を <function>ini_set</function> で上書きすることはできません。
    </para>
    <para>
     PHP の設定は、ウェブサーバーでも設定できます。
     <example>
      <title>PHP の設定を nginx.conf で行う例</title>
      <programlisting role="ini">
       <![CDATA[
set $php_value "pcre.backtrack_limit=424242";
set $php_value "$php_value \n pcre.recursion_limit=99999";
fastcgi_param  PHP_VALUE $php_value;

fastcgi_param  PHP_ADMIN_VALUE "open_basedir=/var/www/htdocs";
       ]]>
      </programlisting>
     </example>
     <caution>
      <para>
       これらの設定は fastcgi ヘッダーとして php-fpm に渡されるので、
       一般公開されているアドレスに php-fpm をバインドしてはいけません。
       そんなことをすると、誰でもそのサーバーの PHP の設定を変更できることになります。
       <link linkend="listen-allowed-clients">listen.allowed_clients</link> も参照ください。
      </para>
     </caution>
     <note>
      <simpara>
       プールはセキュリティを考慮した仕組みではありません。
       なぜなら、完全な分離を提供しないからです。
       たとえば、FPM のプールは、単一の OPcache のインスタンスを使います。
      </simpara>
     </note>
    </para>
   </sect2>
   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
