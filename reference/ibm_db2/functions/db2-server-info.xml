<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 871b71764cdca8238069f27436d96011a6a2cb36 Maintainer: takagi Status: ready -->
<refentry xml:id="function.db2-server-info" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_server_info</refname>
  <refpurpose>
   DB2 データベースサーバーの情報をプロパティに保持するオブジェクトを返す
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>stdClass</type><type>false</type></type><methodname>db2_server_info</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
  </methodsynopsis>

  <para>
   この関数は、IBM DB2、Cloudscape あるいは Apache Derby
   データベースサーバーについての情報を
   読み取り専用のプロパティに保持するオブジェクトを返します。
   以下の表は、データベースサーバーのプロパティの一覧です。
   <table>
    <title>データベースサーバーのプロパティ</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>プロパティ名</entry>
       <entry>戻り値の型</entry>
       <entry>説明</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>DBMS_NAME</entry>
       <entry>string</entry>
       <entry>
        接続中のデータベースサーバーの名前。DB2 サーバーの場合は、
        <literal>DB2</literal> の後にサーバーが稼動している OS
        の名前が続きます。
       </entry>
      </row>
      <row>
       <entry>DBMS_VER</entry>
       <entry>string</entry>
       <entry>
        データベースサーバーのバージョン。"MM.mm.uuuu" という形式の文字列で、
        <varname>MM</varname> がメジャーバージョン、
        <varname>mm</varname> がマイナーバージョン、
        そして <varname>uuuu</varname> がアップデートを表します。
        例えば "08.02.0001" は
        メジャーバージョン 8、マイナーバージョン 2、アップデート 1
        を表します。
       </entry>
      </row>
      <row>
       <entry>DB_CODEPAGE</entry>
       <entry>int</entry>
       <entry>接続中のデータベースのコードページ。</entry>
      </row>
      <row>
       <entry>DB_NAME</entry>
       <entry>string</entry>
       <entry>接続中のデータベースの名前。</entry>
      </row>
      <row>
       <entry>DFT_ISOLATION</entry>
       <entry>string</entry>
       <entry>
        <para>
         サーバーがサポートしているデフォルトのトランザクション分離レベル。
         <variablelist>
          <varlistentry>
           <term>UR</term>
           <listitem>
            <para>
             非コミット読み取り: 変更内容は、他のトランザクションからも
             すぐに見えるようになります。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>CS</term>
           <listitem>
            <para>
             カーソル固定: あるトランザクションで読み込まれた行を、
             別のトランザクションから変更してコミットすることができます。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>RS</term>
           <listitem>
            <para>
             読み取り固定: 検索条件あるいは実行中のトランザクションに
             一致する行を、トランザクションから追加したり削除したりできます。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>RR</term>
           <listitem>
            <para>
             反復可能読み取り: 実行中のトランザクションに影響を受けるデータは、
             他のトランザクションからは見えません。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>NC</term>
           <listitem>
            <para>
             コミット不可: 変更内容は、操作が終了した時点で見えるようになります。
             明示的なコミットやロールバックはできません。
            </para>
           </listitem>
          </varlistentry>
         </variablelist>
        </para>
       </entry>
      </row>
      <row>
       <entry>IDENTIFIER_QUOTE_CHAR</entry>
       <entry>string</entry>
       <entry>識別子を区切るための文字。</entry>
      </row>
      <row>
       <entry>INST_NAME</entry>
       <entry>string</entry>
       <entry>データベースを含むデータベースサーバーのインスタンス名。</entry>
      </row>
      <row>
       <entry>ISOLATION_OPTION</entry>
       <entry>array</entry>
       <entry>
        データベースサーバーがサポートする分離オプション。
        分離オプションについては DFT_ISOLATION プロパティの説明を参照ください。
       </entry>
      </row>
      <row>
       <entry>KEYWORDS</entry>
       <entry>array</entry>
       <entry>データベースサーバーの予約語の配列。</entry>
      </row>
      <row>
       <entry>LIKE_ESCAPE_CLAUSE</entry>
       <entry>bool</entry>
       <entry>
        データベースサーバーがワイルドカード文字
        <literal>%</literal> および <literal>_</literal>
        の使用をサポートしている場合に &true;、
        これらのワイルドカードをサポートしていない場合に &false;。
       </entry>
      </row>
      <row>
       <entry>MAX_COL_NAME_LEN</entry>
       <entry>int</entry>
       <entry>データベースサーバーがサポートするカラム名の最大バイト数。</entry>
      </row>
      <row>
       <entry>MAX_IDENTIFIER_LEN</entry>
       <entry>int</entry>
       <entry>データベースサーバーがサポートする SQL 識別子の最大文字数。</entry>
      </row>
      <row>
       <entry>MAX_INDEX_SIZE</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートするインデックスつきカラムの最大バイト数。
       </entry>
      </row>
      <row>
       <entry>MAX_PROC_NAME_LEN</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートするプロシージャ名の最大バイト数。
       </entry>
      </row>
      <row>
       <entry>MAX_ROW_SIZE</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートするベーステーブルの行の最大バイト数。
       </entry>
      </row>
      <row>
       <entry>MAX_SCHEMA_NAME_LEN</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートするスキーマ名の最大バイト数。
       </entry>
      </row>
      <row>
       <entry>MAX_STATEMENT_LEN</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートする SQL 文の最大バイト数。
       </entry>
      </row>
      <row>
       <entry>MAX_TABLE_NAME_LEN</entry>
       <entry>int</entry>
       <entry>
        データベースサーバーがサポートするテーブル名の最大バイト数。
       </entry>
      </row>
      <row>
       <entry>NON_NULLABLE_COLUMNS</entry>
       <entry>bool</entry>
       <entry>
        データベースサーバーがカラムの NOT NULL 定義をサポートしている場合に
        &true;、サポートしていない場合に &false;。
       </entry>
      </row>
      <row>
       <entry>PROCEDURES</entry>
       <entry>bool</entry>
       <entry>
        データベースサーバーがストアドプロシージャをコールするための
        CALL 文をサポートしている場合に &true;、サポートしていない場合に
        &false;。
       </entry>
      </row>
      <row>
       <entry>SPECIAL_CHARS</entry>
       <entry>string</entry>
       <entry>
        識別子として使用可能な文字のうち、
        a-Z、0-9 およびアンダースコア以外の文字。
       </entry>
      </row>
      <row>
       <entry>SQL_CONFORMANCE</entry>
       <entry>string</entry>
       <entry>
        <para>
         データベースサーバーの ANSI/ISO SQL-92 仕様への対応レベル。
         <variablelist>
          <varlistentry>
           <term>ENTRY</term>
           <listitem>
            <para>
             SQL-92 エントリレベルに準拠しています。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>FIPS127</term>
           <listitem>
            <para>
             FIPS-127-2 transitional に準拠しています。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>FULL</term>
           <listitem>
            <para>
             SQL-92 完全レベルに準拠しています。
            </para>
           </listitem>
          </varlistentry>
          <varlistentry>
           <term>INTERMEDIATE</term>
           <listitem>
            <para>
             SQL-92 中間レベルに準拠しています。
            </para>
           </listitem>
          </varlistentry>
         </variablelist>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       アクティブな DB2 クライアント接続を指定します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合にオブジェクトを返します。
   &return.falseforfailure;
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>db2_server_info</function> の例</title>
    <para>
     サーバーの情報を取得するには、有効なデータベース接続リソースを
     <function>db2_server_info</function> に渡す必要があります。
    </para>
    <programlisting role="php"><![CDATA[<?php

$conn = db2_connect('sample', 'db2inst1', 'ibmdb2');

$server = db2_server_info( $conn );

if ($server) {
    echo "DBMS_NAME: ";                 var_dump( $server->DBMS_NAME );
    echo "DBMS_VER: ";                  var_dump( $server->DBMS_VER );
    echo "DB_CODEPAGE: ";               var_dump( $server->DB_CODEPAGE );
    echo "DB_NAME: ";                   var_dump( $server->DB_NAME );
    echo "INST_NAME: ";                 var_dump( $server->INST_NAME );
    echo "SPECIAL_CHARS: ";             var_dump( $server->SPECIAL_CHARS );
    echo "KEYWORDS: ";                  var_dump( sizeof($server->KEYWORDS) );
    echo "DFT_ISOLATION: ";             var_dump( $server->DFT_ISOLATION );
    echo "ISOLATION_OPTION: ";
    $il = '';
    foreach( $server->ISOLATION_OPTION as $opt )
    {
       $il .= $opt." ";
    }
    var_dump( $il );
    echo "SQL_CONFORMANCE: ";           var_dump( $server->SQL_CONFORMANCE );
    echo "PROCEDURES: ";                var_dump( $server->PROCEDURES );
    echo "IDENTIFIER_QUOTE_CHAR: ";     var_dump( $server->IDENTIFIER_QUOTE_CHAR );
    echo "LIKE_ESCAPE_CLAUSE: ";        var_dump( $server->LIKE_ESCAPE_CLAUSE );
    echo "MAX_COL_NAME_LEN: ";          var_dump( $server->MAX_COL_NAME_LEN );
    echo "MAX_ROW_SIZE: ";              var_dump( $server->MAX_ROW_SIZE );
    echo "MAX_IDENTIFIER_LEN: ";        var_dump( $server->MAX_IDENTIFIER_LEN );
    echo "MAX_INDEX_SIZE: ";            var_dump( $server->MAX_INDEX_SIZE );
    echo "MAX_PROC_NAME_LEN: ";         var_dump( $server->MAX_PROC_NAME_LEN );
    echo "MAX_SCHEMA_NAME_LEN: ";       var_dump( $server->MAX_SCHEMA_NAME_LEN );
    echo "MAX_STATEMENT_LEN: ";         var_dump( $server->MAX_STATEMENT_LEN );
    echo "MAX_TABLE_NAME_LEN: ";        var_dump( $server->MAX_TABLE_NAME_LEN );
    echo "NON_NULLABLE_COLUMNS: ";      var_dump( $server->NON_NULLABLE_COLUMNS );

    db2_close($conn);
}
?>]]></programlisting>
    &example.outputs;
    <screen><![CDATA[DBMS_NAME: string(9) "DB2/LINUX"
DBMS_VER: string(10) "08.02.0000"
DB_CODEPAGE: int(1208)
DB_NAME: string(6) "SAMPLE"
INST_NAME: string(8) "db2inst1"
SPECIAL_CHARS: string(2) "@#"
KEYWORDS: int(179)
DFT_ISOLATION: string(2) "CS"
ISOLATION_OPTION: string(12) "UR CS RS RR "
SQL_CONFORMANCE: string(7) "FIPS127"
PROCEDURES: bool(true)
IDENTIFIER_QUOTE_CHAR: string(1) """
LIKE_ESCAPE_CLAUSE: bool(true)
MAX_COL_NAME_LEN: int(30)
MAX_ROW_SIZE: int(32677)
MAX_IDENTIFIER_LEN: int(18)
MAX_INDEX_SIZE: int(1024)
MAX_PROC_NAME_LEN: int(128)
MAX_SCHEMA_NAME_LEN: int(30)
MAX_STATEMENT_LEN: int(2097152)
MAX_TABLE_NAME_LEN: int(128)
NON_NULLABLE_COLUMNS: bool(true)]]></screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_client_info</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
