<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 41c8533ff5a8f93ba9fdf0732d05dd5ab79864c9 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: haruki,elf,mumumu -->
<refentry xml:id="function.preg-split" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_split</refname>
  <refpurpose>正規表現で文字列を分割する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>preg_split</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   指定した文字列を、正規表現で分割します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       検索するパターンを表す文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       入力文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       これを指定した場合、最大
       <parameter>limit</parameter> 個の部分文字列を返します。
       残りの文字列は、最後の部分文字列に含めて返されます。
       <parameter>limit</parameter> が -1 あるいは 0 の場合は「制限が無い」ことを意味します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> は、次のフラグを組み合わせたものとする
       （ビット和演算子 <literal>|</literal> で組み合わせる）ことが可能です。
       <variablelist>
        <varlistentry>
         <term><constant>PREG_SPLIT_NO_EMPTY</constant></term>
         <listitem>
          <simpara>
          このフラグを設定すると、空文字列でないものだけが
          <function>preg_split</function> により返されます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_DELIM_CAPTURE</constant></term>
         <listitem>
          <simpara>
          このフラグを設定すると、文字列分割用のパターン中の
          カッコによるサブパターンでキャプチャされた値も同時に返されます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           このフラグを設定した場合、各マッチに対応する文字列のオフセットも返されます。
           これにより、戻り値は配列の配列に変わることに注意してください。
           配列のすべての要素が、オフセット <literal>0</literal> に、マッチした文字列、
           オフセット <literal>1</literal> に、<parameter>subject</parameter> 内でのその文字列のオフセット
           からなる配列になります。
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>pattern</parameter> にマッチした境界で分割した
   <parameter>subject</parameter> の部分文字列の配列を返します。&return.falseforfailure;。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pcre.pattern.warning;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>preg_split</function> の例 : 検索文字列の諸部分を取得</title>
    <programlisting role="php">
<![CDATA[
<?php
// カンマまたは " ", \r, \t, \n , \f などの空白文字で句を分割する。
$keywords = preg_split("/[\s,]+/", "hypertext language, programming");
print_r($keywords);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => hypertext
    [1] => language
    [2] => programming
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>文字列を文字要素に分割</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'string';
$chars = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);
print_r($chars);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => s
    [1] => t
    [2] => r
    [3] => i
    [4] => n
    [5] => g
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>文字列をマッチするものとそのオフセットに分割</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'hypertext language programming';
$chars = preg_split('/ /', $str, -1, PREG_SPLIT_OFFSET_CAPTURE);
print_r($chars);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => hypertext
            [1] => 0
        )

    [1] => Array
        (
            [0] => language
            [1] => 10
        )

    [2] => Array
        (
            [0] => programming
            [1] => 19
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    正規表現の威力を必要としないのなら、より高速な
    (機能はシンプルですが) 代替関数として
    <function>explode</function> あるいは <function>str_split</function>
    のような選択肢があります。
   </para>
  </tip>
  <tip>
   <para>
    マッチングに失敗した場合は、要素が一つだけの配列を返します。その要素の内容は、入力文字列そのままになります。
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">PCRE のパターン</link></member>
    <member><function>preg_quote</function></member>
    <member><function>implode</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_match_all</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
