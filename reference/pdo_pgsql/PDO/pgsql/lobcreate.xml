<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 02b075821852f44e97742ba6f586cc2fa3272806 Maintainer: KentarouTakeda Status: ready -->
<!-- CREDITS: takagi,KentarouTakeda -->
<refentry xml:id="pdo-pgsql.lobcreate" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Pdo\Pgsql::lobCreate</refname>
  <refpurpose>新しいラージオブジェクトを作成する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Pdo\\Pgsql">
   <modifier>public</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>Pdo\Pgsql::lobCreate</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   <methodname>Pdo\Pgsql::lobCreate</methodname> は、
   ラージオブジェクトを作成してその OID を返します。
   このオブジェクトに対するデータの読み書きは、
   <methodname>Pdo\Pgsql::lobOpen</methodname> を使用します。
  </simpara>
  <simpara>
   OID は OID 型のカラムに格納され、
   ラージオブジェクトを参照するために使用されます。
   これにより、行のサイズがどんどん拡大してしまうことを防ぎます。
   ラージオブジェクトは <methodname>Pdo\Pgsql::lobUnlink</methodname> を
   コールして削除するまで、データベースに残り続けます。
  </simpara>
  <simpara>
   ラージオブジェクトの取り扱いは複雑です。
   オブジェクトの OID を参照している行をデータベースから削除する際には、
   必ず事前に <function>PDO::pgsqlLOBUnlink</function>をコールしなければなりません。
   そうしないと、どこからも参照されないラージオブジェクトが、サーバーに残り続けてしまうでしょう。
   さらに、ラージオブジェクトにはアクセス権を設定できません。
   代替として、bytea 型のカラムも検討ください。最近のバージョンの PostgreSQL では
   bytea 型のカラムに最大 1GBまで保存でき、行サイズを最適化したうえでデータを透過的に扱うことができます。
  </simpara>
  <note>
   <simpara>
    この関数を含むラージオブジェクトへの全ての操作は
    トランザクション内で行わなければなりません。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   成功した場合、新しく作成されたラージオブジェクトの OID、
   &return.falseforfailure;。
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="pdo-pgsql.lobcreate.example.basic">
   <title><methodname>Pdo\Pgsql::lobCreate</methodname> の例</title>
   <simpara>
     この例では、新しいラージオブジェクトを作成し、
     ファイルの内容をそこにコピーします。その後、
     OID がテーブルに保存されます。
   </simpara>
   <programlisting role="php">
<![CDATA[
<?php
$db = new Pdo\Pgsql('pgsql:dbname=test host=localhost', $user, $pass);
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->beginTransaction();
$oid = $db->lobCreate();
$stream = $db->lobOpen($oid, 'w');
$local = fopen($filename, 'rb');
stream_copy_to_stream($local, $stream);
$local = null;
$stream = null;
$stmt = $db->prepare("INSERT INTO BLOBS (ident, oid) VALUES (?, ?)");
$stmt->execute([$some_id, $oid]);
$db->commit();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Pdo\Pgsql::lobOpen</methodname></member>
   <member><methodname>Pdo\Pgsql::lobUnlink</methodname></member>
   <member><function>pg_lo_create</function></member>
   <member><function>pg_lo_open</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
