<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350d95443aeb0ea8751d71f262aac56d3ad48f83 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.28 -->
<refentry xml:id='function.proc-close' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>proc_close</refname>
  <refpurpose><function>proc_open</function> で開かれたプロセスを閉じ、
  そのプロセスの終了コードを返す</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>proc_close</methodname>
   <methodparam><type>resource</type><parameter>process</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>proc_close</function> は <function>pclose</function>
   と似ていますが、<function>proc_open</function>
   で開かれたプロセスに対してのみ機能するという点で異なります。
   <function>proc_close</function> は、プロセスが終了するまで待った後で、
   終了コードを返します。もし、そのプロセスに対してパイプが開かれていた場合は、
   デッドロックを避けるため、この関数が呼び出された時点でそのパイプは閉じられます -
   パイプが開いている間、子プロセスは終了できないからです。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>process</parameter></term>
     <listitem>
      <para>
       閉じられる <function>proc_open</function> <type>resource</type>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   実行していたプロセスの終了状態を返します。
   エラーが発生した場合は <literal>-1</literal> を返します。
  </para>
  &note.sigchild;
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
